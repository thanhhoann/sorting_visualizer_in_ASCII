"use strict";
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.FormHeader = exports.HELP_SECTION_ID = void 0;
var React = __importStar(require("react"));
var ink_1 = require("ink");
exports.HELP_SECTION_ID = 'Help';
var FormHeader = function (props) {
    var sections = props.form.sections;
    ink_1.useInput(function (input, key) {
        var id = undefined;
        if (key.rightArrow) {
            id = props.currentTab + 1;
        }
        else if (key.leftArrow) {
            id = props.currentTab - 1;
        }
        else if (/\d/.test(input)) {
            id = parseInt(input) - 1;
        }
        if (id !== undefined && id >= 0 && id < sections.length) {
            props.onChangeTab(id);
        }
    }, { isActive: !props.editingField });
    return (React.createElement(ink_1.Box, { borderStyle: "double", width: "100%", flexDirection: "column" },
        React.createElement(ink_1.Box, { width: "100%" },
            React.createElement(ink_1.Box, { flexGrow: 1 },
                React.createElement(ink_1.Text, { bold: true }, props.form.title)),
            React.createElement(ink_1.Box, null,
                React.createElement(ink_1.Text, null, !props.editingField ? 'Use arrow keys to move around' : 'Press ESC to cancel, or Enter to complete field'))),
        React.createElement(ink_1.Box, { width: "100%" },
            React.createElement(ink_1.Box, null, !props.editingField ? (sections.map(function (section, id) { return (React.createElement(ink_1.Box, { key: section.title },
                React.createElement(ink_1.Text, { color: "gray" },
                    "[",
                    id + 1,
                    "] "),
                React.createElement(ink_1.Text, { color: props.currentTab === id ? 'blue' : undefined, underline: props.currentTab === id }, section.title),
                React.createElement(ink_1.Text, null, " "))); })) : (React.createElement(ink_1.Box, null,
                React.createElement(ink_1.Text, null,
                    "Editing ",
                    props.editingField)))))));
};
exports.FormHeader = FormHeader;
