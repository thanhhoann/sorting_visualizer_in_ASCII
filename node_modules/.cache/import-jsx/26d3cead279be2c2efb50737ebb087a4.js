"use strict";

const React = require("react");

const {
  useState,
  useEffect
} = require("react");

const {
  useInput,
  useApp,
  useFocus,
  Text,
  Box
} = require("ink");

const items = [{
  label: "a"
}, {
  label: "b"
}, {
  label: "c"
}];
const blocks = [];

const Test = () => {
  const [color, setColor] = useState("");
  const [counter, setCounter] = useState(0);

  const generateRandomBlocks = () => {
    for (let i = 1; i < 20; i++) {
      let block = {
        height: i * Math.random()
      };
      blocks.push(block);
    }
  };

  useEffect(() => {
    generateRandomBlocks();
    const timer = setInterval(() => {
      setCounter(prev => prev + 1);
    }, 100);
    return () => clearInterval(timer);
  }, []);
  return /*#__PURE__*/React.createElement(Box, {
    flexDirection: "row"
  }, blocks.map((block, index) => /*#__PURE__*/React.createElement(Box, {
    key: index,
    borderStyle: "round",
    height: block.height,
    width: "9",
    borderColor: "white"
  }, /*#__PURE__*/React.createElement(Text, null, index))));
};

module.exports = Test;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJSZWFjdCIsInJlcXVpcmUiLCJ1c2VTdGF0ZSIsInVzZUVmZmVjdCIsInVzZUlucHV0IiwidXNlQXBwIiwidXNlRm9jdXMiLCJUZXh0IiwiQm94IiwiaXRlbXMiLCJsYWJlbCIsImJsb2NrcyIsIlRlc3QiLCJjb2xvciIsInNldENvbG9yIiwiY291bnRlciIsInNldENvdW50ZXIiLCJnZW5lcmF0ZVJhbmRvbUJsb2NrcyIsImkiLCJibG9jayIsImhlaWdodCIsIk1hdGgiLCJyYW5kb20iLCJwdXNoIiwidGltZXIiLCJzZXRJbnRlcnZhbCIsInByZXYiLCJjbGVhckludGVydmFsIiwibWFwIiwiaW5kZXgiLCJtb2R1bGUiLCJleHBvcnRzIl0sInNvdXJjZXMiOlsiVGVzdC5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbmNvbnN0IFJlYWN0ID0gcmVxdWlyZShcInJlYWN0XCIpO1xuY29uc3QgeyB1c2VTdGF0ZSwgdXNlRWZmZWN0IH0gPSByZXF1aXJlKFwicmVhY3RcIik7XG5jb25zdCB7IHVzZUlucHV0LCB1c2VBcHAsIHVzZUZvY3VzLCBUZXh0LCBCb3ggfSA9IHJlcXVpcmUoXCJpbmtcIik7XG5cbmNvbnN0IGl0ZW1zID0gW3sgbGFiZWw6IFwiYVwiIH0sIHsgbGFiZWw6IFwiYlwiIH0sIHsgbGFiZWw6IFwiY1wiIH1dO1xuY29uc3QgYmxvY2tzID0gW107XG5cbmNvbnN0IFRlc3QgPSAoKSA9PiB7XG5cdGNvbnN0IFtjb2xvciwgc2V0Q29sb3JdID0gdXNlU3RhdGUoXCJcIik7XG5cdGNvbnN0IFtjb3VudGVyLCBzZXRDb3VudGVyXSA9IHVzZVN0YXRlKDApO1xuXG5cdGNvbnN0IGdlbmVyYXRlUmFuZG9tQmxvY2tzID0gKCkgPT4ge1xuXHRcdGZvciAobGV0IGkgPSAxOyBpIDwgMjA7IGkrKykge1xuXHRcdFx0bGV0IGJsb2NrID0ge1xuXHRcdFx0XHRoZWlnaHQ6IGkgKiBNYXRoLnJhbmRvbSgpLFxuXHRcdFx0fTtcblx0XHRcdGJsb2Nrcy5wdXNoKGJsb2NrKTtcblx0XHR9XG5cdH07XG5cblx0dXNlRWZmZWN0KCgpID0+IHtcblx0XHRnZW5lcmF0ZVJhbmRvbUJsb2NrcygpO1xuXHRcdGNvbnN0IHRpbWVyID0gc2V0SW50ZXJ2YWwoKCkgPT4ge1xuXHRcdFx0c2V0Q291bnRlcigocHJldikgPT4gcHJldiArIDEpO1xuXHRcdH0sIDEwMCk7XG5cdFx0cmV0dXJuICgpID0+IGNsZWFySW50ZXJ2YWwodGltZXIpO1xuXHR9LCBbXSk7XG5cblx0cmV0dXJuIChcblx0XHQ8Qm94IGZsZXhEaXJlY3Rpb249XCJyb3dcIj5cblx0XHRcdHtibG9ja3MubWFwKChibG9jaywgaW5kZXgpID0+IChcblx0XHRcdFx0PEJveFxuXHRcdFx0XHRcdGtleT17aW5kZXh9XG5cdFx0XHRcdFx0Ym9yZGVyU3R5bGU9XCJyb3VuZFwiXG5cdFx0XHRcdFx0aGVpZ2h0PXtibG9jay5oZWlnaHR9XG5cdFx0XHRcdFx0d2lkdGg9XCI5XCJcblx0XHRcdFx0XHRib3JkZXJDb2xvcj1cIndoaXRlXCJcblx0XHRcdFx0PlxuXHRcdFx0XHRcdDxUZXh0PntpbmRleH08L1RleHQ+XG5cdFx0XHRcdDwvQm94PlxuXHRcdFx0KSl9XG5cdFx0PC9Cb3g+XG5cdCk7XG59O1xuXG5tb2R1bGUuZXhwb3J0cyA9IFRlc3Q7XG4iXSwibWFwcGluZ3MiOiJBQUFBOztBQUNBLE1BQU1BLEtBQUssR0FBR0MsT0FBTyxDQUFDLE9BQUQsQ0FBckI7O0FBQ0EsTUFBTTtFQUFFQyxRQUFGO0VBQVlDO0FBQVosSUFBMEJGLE9BQU8sQ0FBQyxPQUFELENBQXZDOztBQUNBLE1BQU07RUFBRUcsUUFBRjtFQUFZQyxNQUFaO0VBQW9CQyxRQUFwQjtFQUE4QkMsSUFBOUI7RUFBb0NDO0FBQXBDLElBQTRDUCxPQUFPLENBQUMsS0FBRCxDQUF6RDs7QUFFQSxNQUFNUSxLQUFLLEdBQUcsQ0FBQztFQUFFQyxLQUFLLEVBQUU7QUFBVCxDQUFELEVBQWlCO0VBQUVBLEtBQUssRUFBRTtBQUFULENBQWpCLEVBQWlDO0VBQUVBLEtBQUssRUFBRTtBQUFULENBQWpDLENBQWQ7QUFDQSxNQUFNQyxNQUFNLEdBQUcsRUFBZjs7QUFFQSxNQUFNQyxJQUFJLEdBQUcsTUFBTTtFQUNsQixNQUFNLENBQUNDLEtBQUQsRUFBUUMsUUFBUixJQUFvQlosUUFBUSxDQUFDLEVBQUQsQ0FBbEM7RUFDQSxNQUFNLENBQUNhLE9BQUQsRUFBVUMsVUFBVixJQUF3QmQsUUFBUSxDQUFDLENBQUQsQ0FBdEM7O0VBRUEsTUFBTWUsb0JBQW9CLEdBQUcsTUFBTTtJQUNsQyxLQUFLLElBQUlDLENBQUMsR0FBRyxDQUFiLEVBQWdCQSxDQUFDLEdBQUcsRUFBcEIsRUFBd0JBLENBQUMsRUFBekIsRUFBNkI7TUFDNUIsSUFBSUMsS0FBSyxHQUFHO1FBQ1hDLE1BQU0sRUFBRUYsQ0FBQyxHQUFHRyxJQUFJLENBQUNDLE1BQUw7TUFERCxDQUFaO01BR0FYLE1BQU0sQ0FBQ1ksSUFBUCxDQUFZSixLQUFaO0lBQ0E7RUFDRCxDQVBEOztFQVNBaEIsU0FBUyxDQUFDLE1BQU07SUFDZmMsb0JBQW9CO0lBQ3BCLE1BQU1PLEtBQUssR0FBR0MsV0FBVyxDQUFDLE1BQU07TUFDL0JULFVBQVUsQ0FBRVUsSUFBRCxJQUFVQSxJQUFJLEdBQUcsQ0FBbEIsQ0FBVjtJQUNBLENBRndCLEVBRXRCLEdBRnNCLENBQXpCO0lBR0EsT0FBTyxNQUFNQyxhQUFhLENBQUNILEtBQUQsQ0FBMUI7RUFDQSxDQU5RLEVBTU4sRUFOTSxDQUFUO0VBUUEsb0JBQ0Msb0JBQUMsR0FBRDtJQUFLLGFBQWEsRUFBQztFQUFuQixHQUNFYixNQUFNLENBQUNpQixHQUFQLENBQVcsQ0FBQ1QsS0FBRCxFQUFRVSxLQUFSLGtCQUNYLG9CQUFDLEdBQUQ7SUFDQyxHQUFHLEVBQUVBLEtBRE47SUFFQyxXQUFXLEVBQUMsT0FGYjtJQUdDLE1BQU0sRUFBRVYsS0FBSyxDQUFDQyxNQUhmO0lBSUMsS0FBSyxFQUFDLEdBSlA7SUFLQyxXQUFXLEVBQUM7RUFMYixnQkFPQyxvQkFBQyxJQUFELFFBQU9TLEtBQVAsQ0FQRCxDQURBLENBREYsQ0FERDtBQWVBLENBcENEOztBQXNDQUMsTUFBTSxDQUFDQyxPQUFQLEdBQWlCbkIsSUFBakIifQ==