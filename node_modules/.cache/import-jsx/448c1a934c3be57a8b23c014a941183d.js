"use strict";

const React = require("react");

const {
  useState,
  useEffect
} = require("react");

const {
  useInput,
  useApp,
  useFocus,
  Text,
  Box
} = require("ink");

const items = [{
  label: "a"
}, {
  label: "b"
}, {
  label: "c"
}];
const {
  exit
} = useApp();

const Focus = () => {
  const [content, setContent] = useState("");
  return /*#__PURE__*/React.createElement(Box, {
    flexDirection: "column",
    padding: 1
  }, /*#__PURE__*/React.createElement(Box, {
    marginBottom: 1
  }), items.map((item, index) => /*#__PURE__*/React.createElement(Item, {
    key: index,
    label: item.label,
    getFocusedItem: e => setContent(e)
  })), /*#__PURE__*/React.createElement(Text, null, "You chose ", content));
};

const Item = ({
  label,
  getFocusedItem
}) => {
  const {
    isFocused
  } = useFocus();
  useInput((input, key) => {
    if (input === "q") {
      exit();
    }

    if (key.return) {
      isFocused && getFocusedItem(label);
    }
  });
  return /*#__PURE__*/React.createElement(Box, {
    borderStyle: "round",
    borderColor: isFocused ? "green" : "white"
  }, /*#__PURE__*/React.createElement(Text, null, label));
};

const App = () => {
  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Focus, null));
};

module.exports = App;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJSZWFjdCIsInJlcXVpcmUiLCJ1c2VTdGF0ZSIsInVzZUVmZmVjdCIsInVzZUlucHV0IiwidXNlQXBwIiwidXNlRm9jdXMiLCJUZXh0IiwiQm94IiwiaXRlbXMiLCJsYWJlbCIsImV4aXQiLCJGb2N1cyIsImNvbnRlbnQiLCJzZXRDb250ZW50IiwibWFwIiwiaXRlbSIsImluZGV4IiwiZSIsIkl0ZW0iLCJnZXRGb2N1c2VkSXRlbSIsImlzRm9jdXNlZCIsImlucHV0Iiwia2V5IiwicmV0dXJuIiwiQXBwIiwibW9kdWxlIiwiZXhwb3J0cyJdLCJzb3VyY2VzIjpbInVpLmpzIl0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuY29uc3QgUmVhY3QgPSByZXF1aXJlKFwicmVhY3RcIik7XG5jb25zdCB7IHVzZVN0YXRlLCB1c2VFZmZlY3QgfSA9IHJlcXVpcmUoXCJyZWFjdFwiKTtcbmNvbnN0IHsgdXNlSW5wdXQsIHVzZUFwcCwgdXNlRm9jdXMsIFRleHQsIEJveCB9ID0gcmVxdWlyZShcImlua1wiKTtcblxuY29uc3QgaXRlbXMgPSBbeyBsYWJlbDogXCJhXCIgfSwgeyBsYWJlbDogXCJiXCIgfSwgeyBsYWJlbDogXCJjXCIgfV07XG5jb25zdCB7IGV4aXQgfSA9IHVzZUFwcCgpO1xuXG5jb25zdCBGb2N1cyA9ICgpID0+IHtcblx0Y29uc3QgW2NvbnRlbnQsIHNldENvbnRlbnRdID0gdXNlU3RhdGUoXCJcIik7XG5cblx0cmV0dXJuIChcblx0XHQ8Qm94IGZsZXhEaXJlY3Rpb249XCJjb2x1bW5cIiBwYWRkaW5nPXsxfT5cblx0XHRcdDxCb3ggbWFyZ2luQm90dG9tPXsxfT48L0JveD5cblx0XHRcdHtpdGVtcy5tYXAoKGl0ZW0sIGluZGV4KSA9PiAoXG5cdFx0XHRcdDxJdGVtXG5cdFx0XHRcdFx0a2V5PXtpbmRleH1cblx0XHRcdFx0XHRsYWJlbD17aXRlbS5sYWJlbH1cblx0XHRcdFx0XHRnZXRGb2N1c2VkSXRlbT17KGUpID0+IHNldENvbnRlbnQoZSl9XG5cdFx0XHRcdC8+XG5cdFx0XHQpKX1cblx0XHRcdDxUZXh0PllvdSBjaG9zZSB7Y29udGVudH08L1RleHQ+XG5cdFx0PC9Cb3g+XG5cdCk7XG59O1xuXG5jb25zdCBJdGVtID0gKHsgbGFiZWwsIGdldEZvY3VzZWRJdGVtIH0pID0+IHtcblx0Y29uc3QgeyBpc0ZvY3VzZWQgfSA9IHVzZUZvY3VzKCk7XG5cdHVzZUlucHV0KChpbnB1dCwga2V5KSA9PiB7XG5cdFx0aWYgKGlucHV0ID09PSBcInFcIikge1xuXHRcdFx0ZXhpdCgpO1xuXHRcdH1cblxuXHRcdGlmIChrZXkucmV0dXJuKSB7XG5cdFx0XHRpc0ZvY3VzZWQgJiYgZ2V0Rm9jdXNlZEl0ZW0obGFiZWwpO1xuXHRcdH1cblx0fSk7XG5cblx0cmV0dXJuIChcblx0XHQ8Qm94IGJvcmRlclN0eWxlPVwicm91bmRcIiBib3JkZXJDb2xvcj17aXNGb2N1c2VkID8gXCJncmVlblwiIDogXCJ3aGl0ZVwifT5cblx0XHRcdDxUZXh0PntsYWJlbH08L1RleHQ+XG5cdFx0PC9Cb3g+XG5cdCk7XG59O1xuXG5jb25zdCBBcHAgPSAoKSA9PiB7XG5cdHJldHVybiAoXG5cdFx0PD5cblx0XHRcdDxGb2N1cyAvPlxuXHRcdDwvPlxuXHQpO1xufTtcblxubW9kdWxlLmV4cG9ydHMgPSBBcHA7XG4iXSwibWFwcGluZ3MiOiJBQUFBOztBQUNBLE1BQU1BLEtBQUssR0FBR0MsT0FBTyxDQUFDLE9BQUQsQ0FBckI7O0FBQ0EsTUFBTTtFQUFFQyxRQUFGO0VBQVlDO0FBQVosSUFBMEJGLE9BQU8sQ0FBQyxPQUFELENBQXZDOztBQUNBLE1BQU07RUFBRUcsUUFBRjtFQUFZQyxNQUFaO0VBQW9CQyxRQUFwQjtFQUE4QkMsSUFBOUI7RUFBb0NDO0FBQXBDLElBQTRDUCxPQUFPLENBQUMsS0FBRCxDQUF6RDs7QUFFQSxNQUFNUSxLQUFLLEdBQUcsQ0FBQztFQUFFQyxLQUFLLEVBQUU7QUFBVCxDQUFELEVBQWlCO0VBQUVBLEtBQUssRUFBRTtBQUFULENBQWpCLEVBQWlDO0VBQUVBLEtBQUssRUFBRTtBQUFULENBQWpDLENBQWQ7QUFDQSxNQUFNO0VBQUVDO0FBQUYsSUFBV04sTUFBTSxFQUF2Qjs7QUFFQSxNQUFNTyxLQUFLLEdBQUcsTUFBTTtFQUNuQixNQUFNLENBQUNDLE9BQUQsRUFBVUMsVUFBVixJQUF3QlosUUFBUSxDQUFDLEVBQUQsQ0FBdEM7RUFFQSxvQkFDQyxvQkFBQyxHQUFEO0lBQUssYUFBYSxFQUFDLFFBQW5CO0lBQTRCLE9BQU8sRUFBRTtFQUFyQyxnQkFDQyxvQkFBQyxHQUFEO0lBQUssWUFBWSxFQUFFO0VBQW5CLEVBREQsRUFFRU8sS0FBSyxDQUFDTSxHQUFOLENBQVUsQ0FBQ0MsSUFBRCxFQUFPQyxLQUFQLGtCQUNWLG9CQUFDLElBQUQ7SUFDQyxHQUFHLEVBQUVBLEtBRE47SUFFQyxLQUFLLEVBQUVELElBQUksQ0FBQ04sS0FGYjtJQUdDLGNBQWMsRUFBR1EsQ0FBRCxJQUFPSixVQUFVLENBQUNJLENBQUQ7RUFIbEMsRUFEQSxDQUZGLGVBU0Msb0JBQUMsSUFBRCxzQkFBaUJMLE9BQWpCLENBVEQsQ0FERDtBQWFBLENBaEJEOztBQWtCQSxNQUFNTSxJQUFJLEdBQUcsQ0FBQztFQUFFVCxLQUFGO0VBQVNVO0FBQVQsQ0FBRCxLQUErQjtFQUMzQyxNQUFNO0lBQUVDO0VBQUYsSUFBZ0JmLFFBQVEsRUFBOUI7RUFDQUYsUUFBUSxDQUFDLENBQUNrQixLQUFELEVBQVFDLEdBQVIsS0FBZ0I7SUFDeEIsSUFBSUQsS0FBSyxLQUFLLEdBQWQsRUFBbUI7TUFDbEJYLElBQUk7SUFDSjs7SUFFRCxJQUFJWSxHQUFHLENBQUNDLE1BQVIsRUFBZ0I7TUFDZkgsU0FBUyxJQUFJRCxjQUFjLENBQUNWLEtBQUQsQ0FBM0I7SUFDQTtFQUNELENBUk8sQ0FBUjtFQVVBLG9CQUNDLG9CQUFDLEdBQUQ7SUFBSyxXQUFXLEVBQUMsT0FBakI7SUFBeUIsV0FBVyxFQUFFVyxTQUFTLEdBQUcsT0FBSCxHQUFhO0VBQTVELGdCQUNDLG9CQUFDLElBQUQsUUFBT1gsS0FBUCxDQURELENBREQ7QUFLQSxDQWpCRDs7QUFtQkEsTUFBTWUsR0FBRyxHQUFHLE1BQU07RUFDakIsb0JBQ0MsdURBQ0Msb0JBQUMsS0FBRCxPQURELENBREQ7QUFLQSxDQU5EOztBQVFBQyxNQUFNLENBQUNDLE9BQVAsR0FBaUJGLEdBQWpCIn0=