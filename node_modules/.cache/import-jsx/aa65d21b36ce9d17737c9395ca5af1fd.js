"use strict";

const React = require("react");

const {
  Text,
  Box,
  Transform,
  Newline
} = require("ink");

const {
  useState,
  useEffect
} = require("react");

const TextInput = require("ink-text-input").default;

const Ascii = require("ink-ascii").default;

const Gradient = require("ink-gradient");

const BigText = require("ink-big-text");

const {
  QuickSearchInput
} = require("ink-quicksearch-input");

const App = () => {
  const [result, setResult] = useState("");
  return /*#__PURE__*/React.createElement(Box, {
    flexDirection: "column"
  }, /*#__PURE__*/React.createElement(Box, {
    justifyContent: "center"
  }, /*#__PURE__*/React.createElement(Gradient, {
    name: "instagram"
  }, /*#__PURE__*/React.createElement(BigText, {
    text: "Anubis"
  }))), /*#__PURE__*/React.createElement(Box, null, /*#__PURE__*/React.createElement(Text, null, /*#__PURE__*/React.createElement(Text, null, "What do you want ?"), /*#__PURE__*/React.createElement(Newline, null), /*#__PURE__*/React.createElement(Text, null, "You wanted to ", result)), /*#__PURE__*/React.createElement(QuickSearchInput, {
    items: [{
      value: 1,
      label: "a"
    }, {
      value: 2,
      label: "b"
    }],
    onSelect: item => setResult(item.label)
  })));
};

module.exports = App;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJSZWFjdCIsInJlcXVpcmUiLCJUZXh0IiwiQm94IiwiVHJhbnNmb3JtIiwiTmV3bGluZSIsInVzZVN0YXRlIiwidXNlRWZmZWN0IiwiVGV4dElucHV0IiwiZGVmYXVsdCIsIkFzY2lpIiwiR3JhZGllbnQiLCJCaWdUZXh0IiwiUXVpY2tTZWFyY2hJbnB1dCIsIkFwcCIsInJlc3VsdCIsInNldFJlc3VsdCIsInZhbHVlIiwibGFiZWwiLCJpdGVtIiwibW9kdWxlIiwiZXhwb3J0cyJdLCJzb3VyY2VzIjpbInVpLmpzIl0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuY29uc3QgUmVhY3QgPSByZXF1aXJlKFwicmVhY3RcIik7XG5jb25zdCB7IFRleHQsIEJveCwgVHJhbnNmb3JtLCBOZXdsaW5lIH0gPSByZXF1aXJlKFwiaW5rXCIpO1xuY29uc3QgeyB1c2VTdGF0ZSwgdXNlRWZmZWN0IH0gPSByZXF1aXJlKFwicmVhY3RcIik7XG5jb25zdCBUZXh0SW5wdXQgPSByZXF1aXJlKFwiaW5rLXRleHQtaW5wdXRcIikuZGVmYXVsdDtcbmNvbnN0IEFzY2lpID0gcmVxdWlyZShcImluay1hc2NpaVwiKS5kZWZhdWx0O1xuY29uc3QgR3JhZGllbnQgPSByZXF1aXJlKFwiaW5rLWdyYWRpZW50XCIpO1xuY29uc3QgQmlnVGV4dCA9IHJlcXVpcmUoXCJpbmstYmlnLXRleHRcIik7XG5jb25zdCB7IFF1aWNrU2VhcmNoSW5wdXQgfSA9IHJlcXVpcmUoXCJpbmstcXVpY2tzZWFyY2gtaW5wdXRcIik7XG5cbmNvbnN0IEFwcCA9ICgpID0+IHtcblx0Y29uc3QgW3Jlc3VsdCwgc2V0UmVzdWx0XSA9IHVzZVN0YXRlKFwiXCIpO1xuXHRyZXR1cm4gKFxuXHRcdDxCb3ggZmxleERpcmVjdGlvbj1cImNvbHVtblwiPlxuXHRcdFx0PEJveCBqdXN0aWZ5Q29udGVudD1cImNlbnRlclwiPlxuXHRcdFx0XHQ8R3JhZGllbnQgbmFtZT1cImluc3RhZ3JhbVwiPlxuXHRcdFx0XHRcdDxCaWdUZXh0IHRleHQ9XCJBbnViaXNcIiAvPlxuXHRcdFx0XHQ8L0dyYWRpZW50PlxuXHRcdFx0PC9Cb3g+XG5cdFx0XHQ8Qm94PlxuXHRcdFx0XHQ8VGV4dD5cblx0XHRcdFx0XHQ8VGV4dD5XaGF0IGRvIHlvdSB3YW50ID88L1RleHQ+XG5cdFx0XHRcdFx0PE5ld2xpbmUgLz5cblx0XHRcdFx0XHQ8VGV4dD5Zb3Ugd2FudGVkIHRvIHtyZXN1bHR9PC9UZXh0PlxuXHRcdFx0XHQ8L1RleHQ+XG5cdFx0XHRcdDxRdWlja1NlYXJjaElucHV0XG5cdFx0XHRcdFx0aXRlbXM9e1tcblx0XHRcdFx0XHRcdHsgdmFsdWU6IDEsIGxhYmVsOiBcImFcIiB9LFxuXHRcdFx0XHRcdFx0eyB2YWx1ZTogMiwgbGFiZWw6IFwiYlwiIH0sXG5cdFx0XHRcdFx0XX1cblx0XHRcdFx0XHRvblNlbGVjdD17KGl0ZW0pID0+IHNldFJlc3VsdChpdGVtLmxhYmVsKX1cblx0XHRcdFx0Lz5cblx0XHRcdDwvQm94PlxuXHRcdDwvQm94PlxuXHQpO1xufTtcblxubW9kdWxlLmV4cG9ydHMgPSBBcHA7XG4iXSwibWFwcGluZ3MiOiJBQUFBOztBQUNBLE1BQU1BLEtBQUssR0FBR0MsT0FBTyxDQUFDLE9BQUQsQ0FBckI7O0FBQ0EsTUFBTTtFQUFFQyxJQUFGO0VBQVFDLEdBQVI7RUFBYUMsU0FBYjtFQUF3QkM7QUFBeEIsSUFBb0NKLE9BQU8sQ0FBQyxLQUFELENBQWpEOztBQUNBLE1BQU07RUFBRUssUUFBRjtFQUFZQztBQUFaLElBQTBCTixPQUFPLENBQUMsT0FBRCxDQUF2Qzs7QUFDQSxNQUFNTyxTQUFTLEdBQUdQLE9BQU8sQ0FBQyxnQkFBRCxDQUFQLENBQTBCUSxPQUE1Qzs7QUFDQSxNQUFNQyxLQUFLLEdBQUdULE9BQU8sQ0FBQyxXQUFELENBQVAsQ0FBcUJRLE9BQW5DOztBQUNBLE1BQU1FLFFBQVEsR0FBR1YsT0FBTyxDQUFDLGNBQUQsQ0FBeEI7O0FBQ0EsTUFBTVcsT0FBTyxHQUFHWCxPQUFPLENBQUMsY0FBRCxDQUF2Qjs7QUFDQSxNQUFNO0VBQUVZO0FBQUYsSUFBdUJaLE9BQU8sQ0FBQyx1QkFBRCxDQUFwQzs7QUFFQSxNQUFNYSxHQUFHLEdBQUcsTUFBTTtFQUNqQixNQUFNLENBQUNDLE1BQUQsRUFBU0MsU0FBVCxJQUFzQlYsUUFBUSxDQUFDLEVBQUQsQ0FBcEM7RUFDQSxvQkFDQyxvQkFBQyxHQUFEO0lBQUssYUFBYSxFQUFDO0VBQW5CLGdCQUNDLG9CQUFDLEdBQUQ7SUFBSyxjQUFjLEVBQUM7RUFBcEIsZ0JBQ0Msb0JBQUMsUUFBRDtJQUFVLElBQUksRUFBQztFQUFmLGdCQUNDLG9CQUFDLE9BQUQ7SUFBUyxJQUFJLEVBQUM7RUFBZCxFQURELENBREQsQ0FERCxlQU1DLG9CQUFDLEdBQUQscUJBQ0Msb0JBQUMsSUFBRCxxQkFDQyxvQkFBQyxJQUFELDZCQURELGVBRUMsb0JBQUMsT0FBRCxPQUZELGVBR0Msb0JBQUMsSUFBRCwwQkFBcUJTLE1BQXJCLENBSEQsQ0FERCxlQU1DLG9CQUFDLGdCQUFEO0lBQ0MsS0FBSyxFQUFFLENBQ047TUFBRUUsS0FBSyxFQUFFLENBQVQ7TUFBWUMsS0FBSyxFQUFFO0lBQW5CLENBRE0sRUFFTjtNQUFFRCxLQUFLLEVBQUUsQ0FBVDtNQUFZQyxLQUFLLEVBQUU7SUFBbkIsQ0FGTSxDQURSO0lBS0MsUUFBUSxFQUFHQyxJQUFELElBQVVILFNBQVMsQ0FBQ0csSUFBSSxDQUFDRCxLQUFOO0VBTDlCLEVBTkQsQ0FORCxDQUREO0FBdUJBLENBekJEOztBQTJCQUUsTUFBTSxDQUFDQyxPQUFQLEdBQWlCUCxHQUFqQiJ9