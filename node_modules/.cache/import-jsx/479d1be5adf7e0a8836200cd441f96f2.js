"use strict";

const React = require("react");

const {
  useState,
  useEffect
} = require("react");

const {
  useInput,
  useApp,
  useFocus,
  Text,
  Box
} = require("ink");

const items = [{
  label: "a"
}, {
  label: "b"
}, {
  label: "c"
}];
const blocks = [];

const Test = () => {
  const [color, setColor] = useState("");
  const [counter, setCounter] = useState(0);

  const generateRandomBlocks = () => {
    let block = {
      height: Math.random(),
      width: Math.random()
    };
    blocks.push(block);
  };

  useEffect(() => {
    generateRandomBlocks();
    const timer = setInterval(() => {
      setCounter(prev => prev + 1);
    }, 100);
    return () => clearInterval(timer);
  }, []);
  return /*#__PURE__*/React.createElement(Box, {
    flexDirection: "row"
  }, blocks.map((block, index) => /*#__PURE__*/React.createElement(Box, {
    borderStyle: "round",
    height: block.height,
    width: block.width,
    borderColor: "white"
  }, /*#__PURE__*/React.createElement(Text, null, index))));
};

module.exports = Test;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJSZWFjdCIsInJlcXVpcmUiLCJ1c2VTdGF0ZSIsInVzZUVmZmVjdCIsInVzZUlucHV0IiwidXNlQXBwIiwidXNlRm9jdXMiLCJUZXh0IiwiQm94IiwiaXRlbXMiLCJsYWJlbCIsImJsb2NrcyIsIlRlc3QiLCJjb2xvciIsInNldENvbG9yIiwiY291bnRlciIsInNldENvdW50ZXIiLCJnZW5lcmF0ZVJhbmRvbUJsb2NrcyIsImJsb2NrIiwiaGVpZ2h0IiwiTWF0aCIsInJhbmRvbSIsIndpZHRoIiwicHVzaCIsInRpbWVyIiwic2V0SW50ZXJ2YWwiLCJwcmV2IiwiY2xlYXJJbnRlcnZhbCIsIm1hcCIsImluZGV4IiwibW9kdWxlIiwiZXhwb3J0cyJdLCJzb3VyY2VzIjpbIlRlc3QuanMiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5jb25zdCBSZWFjdCA9IHJlcXVpcmUoXCJyZWFjdFwiKTtcbmNvbnN0IHsgdXNlU3RhdGUsIHVzZUVmZmVjdCB9ID0gcmVxdWlyZShcInJlYWN0XCIpO1xuY29uc3QgeyB1c2VJbnB1dCwgdXNlQXBwLCB1c2VGb2N1cywgVGV4dCwgQm94IH0gPSByZXF1aXJlKFwiaW5rXCIpO1xuXG5jb25zdCBpdGVtcyA9IFt7IGxhYmVsOiBcImFcIiB9LCB7IGxhYmVsOiBcImJcIiB9LCB7IGxhYmVsOiBcImNcIiB9XTtcbmNvbnN0IGJsb2NrcyA9IFtdO1xuXG5jb25zdCBUZXN0ID0gKCkgPT4ge1xuXHRjb25zdCBbY29sb3IsIHNldENvbG9yXSA9IHVzZVN0YXRlKFwiXCIpO1xuXHRjb25zdCBbY291bnRlciwgc2V0Q291bnRlcl0gPSB1c2VTdGF0ZSgwKTtcblxuXHRjb25zdCBnZW5lcmF0ZVJhbmRvbUJsb2NrcyA9ICgpID0+IHtcblx0XHRsZXQgYmxvY2sgPSB7IGhlaWdodDogTWF0aC5yYW5kb20oKSwgd2lkdGg6IE1hdGgucmFuZG9tKCkgfTtcblx0XHRibG9ja3MucHVzaChibG9jayk7XG5cdH07XG5cblx0dXNlRWZmZWN0KCgpID0+IHtcblx0XHRnZW5lcmF0ZVJhbmRvbUJsb2NrcygpO1xuXHRcdGNvbnN0IHRpbWVyID0gc2V0SW50ZXJ2YWwoKCkgPT4ge1xuXHRcdFx0c2V0Q291bnRlcigocHJldikgPT4gcHJldiArIDEpO1xuXHRcdH0sIDEwMCk7XG5cdFx0cmV0dXJuICgpID0+IGNsZWFySW50ZXJ2YWwodGltZXIpO1xuXHR9LCBbXSk7XG5cblx0cmV0dXJuIChcblx0XHQ8Qm94IGZsZXhEaXJlY3Rpb249XCJyb3dcIj5cblx0XHRcdHtibG9ja3MubWFwKChibG9jaywgaW5kZXgpID0+IChcblx0XHRcdFx0PEJveFxuXHRcdFx0XHRcdGJvcmRlclN0eWxlPVwicm91bmRcIlxuXHRcdFx0XHRcdGhlaWdodD17YmxvY2suaGVpZ2h0fVxuXHRcdFx0XHRcdHdpZHRoPXtibG9jay53aWR0aH1cblx0XHRcdFx0XHRib3JkZXJDb2xvcj1cIndoaXRlXCJcblx0XHRcdFx0PlxuXHRcdFx0XHRcdDxUZXh0PntpbmRleH08L1RleHQ+XG5cdFx0XHRcdDwvQm94PlxuXHRcdFx0KSl9XG5cdFx0PC9Cb3g+XG5cdCk7XG59O1xuXG5tb2R1bGUuZXhwb3J0cyA9IFRlc3Q7XG4iXSwibWFwcGluZ3MiOiJBQUFBOztBQUNBLE1BQU1BLEtBQUssR0FBR0MsT0FBTyxDQUFDLE9BQUQsQ0FBckI7O0FBQ0EsTUFBTTtFQUFFQyxRQUFGO0VBQVlDO0FBQVosSUFBMEJGLE9BQU8sQ0FBQyxPQUFELENBQXZDOztBQUNBLE1BQU07RUFBRUcsUUFBRjtFQUFZQyxNQUFaO0VBQW9CQyxRQUFwQjtFQUE4QkMsSUFBOUI7RUFBb0NDO0FBQXBDLElBQTRDUCxPQUFPLENBQUMsS0FBRCxDQUF6RDs7QUFFQSxNQUFNUSxLQUFLLEdBQUcsQ0FBQztFQUFFQyxLQUFLLEVBQUU7QUFBVCxDQUFELEVBQWlCO0VBQUVBLEtBQUssRUFBRTtBQUFULENBQWpCLEVBQWlDO0VBQUVBLEtBQUssRUFBRTtBQUFULENBQWpDLENBQWQ7QUFDQSxNQUFNQyxNQUFNLEdBQUcsRUFBZjs7QUFFQSxNQUFNQyxJQUFJLEdBQUcsTUFBTTtFQUNsQixNQUFNLENBQUNDLEtBQUQsRUFBUUMsUUFBUixJQUFvQlosUUFBUSxDQUFDLEVBQUQsQ0FBbEM7RUFDQSxNQUFNLENBQUNhLE9BQUQsRUFBVUMsVUFBVixJQUF3QmQsUUFBUSxDQUFDLENBQUQsQ0FBdEM7O0VBRUEsTUFBTWUsb0JBQW9CLEdBQUcsTUFBTTtJQUNsQyxJQUFJQyxLQUFLLEdBQUc7TUFBRUMsTUFBTSxFQUFFQyxJQUFJLENBQUNDLE1BQUwsRUFBVjtNQUF5QkMsS0FBSyxFQUFFRixJQUFJLENBQUNDLE1BQUw7SUFBaEMsQ0FBWjtJQUNBVixNQUFNLENBQUNZLElBQVAsQ0FBWUwsS0FBWjtFQUNBLENBSEQ7O0VBS0FmLFNBQVMsQ0FBQyxNQUFNO0lBQ2ZjLG9CQUFvQjtJQUNwQixNQUFNTyxLQUFLLEdBQUdDLFdBQVcsQ0FBQyxNQUFNO01BQy9CVCxVQUFVLENBQUVVLElBQUQsSUFBVUEsSUFBSSxHQUFHLENBQWxCLENBQVY7SUFDQSxDQUZ3QixFQUV0QixHQUZzQixDQUF6QjtJQUdBLE9BQU8sTUFBTUMsYUFBYSxDQUFDSCxLQUFELENBQTFCO0VBQ0EsQ0FOUSxFQU1OLEVBTk0sQ0FBVDtFQVFBLG9CQUNDLG9CQUFDLEdBQUQ7SUFBSyxhQUFhLEVBQUM7RUFBbkIsR0FDRWIsTUFBTSxDQUFDaUIsR0FBUCxDQUFXLENBQUNWLEtBQUQsRUFBUVcsS0FBUixrQkFDWCxvQkFBQyxHQUFEO0lBQ0MsV0FBVyxFQUFDLE9BRGI7SUFFQyxNQUFNLEVBQUVYLEtBQUssQ0FBQ0MsTUFGZjtJQUdDLEtBQUssRUFBRUQsS0FBSyxDQUFDSSxLQUhkO0lBSUMsV0FBVyxFQUFDO0VBSmIsZ0JBTUMsb0JBQUMsSUFBRCxRQUFPTyxLQUFQLENBTkQsQ0FEQSxDQURGLENBREQ7QUFjQSxDQS9CRDs7QUFpQ0FDLE1BQU0sQ0FBQ0MsT0FBUCxHQUFpQm5CLElBQWpCIn0=