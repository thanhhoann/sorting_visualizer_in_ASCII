"use strict";

const React = require("react");

const {
  useState,
  useEffect
} = require("react");

const {
  useInput,
  useApp,
  useFocus,
  Text,
  Box
} = require("ink");

const items = [{
  label: "a"
}, {
  label: "b"
}, {
  label: "c"
}];
const blocks = [];

const Test = () => {
  const [color, setColor] = useState("");
  const [counter, setCounter] = useState(0);

  const generateRandomBlocks = () => {
    for (let i = 1; i < 4; i++) {
      let block = {
        height: i * Math.random() * 10
      };
      blocks.push(block);
    }
  };

  useEffect(() => {
    generateRandomBlocks();
    const timer = setInterval(() => {
      setCounter(prev => prev + 1);
    }, 100);
    return () => clearInterval(timer);
  }, []);
  return /*#__PURE__*/React.createElement(Box, {
    flexDirection: "row"
  }, blocks.map((block, index) => /*#__PURE__*/React.createElement(Box, {
    key: index,
    borderStyle: "round",
    height: block.height,
    width: "5",
    borderColor: "white"
  }, /*#__PURE__*/React.createElement(Text, null, index))));
};

module.exports = Test;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJSZWFjdCIsInJlcXVpcmUiLCJ1c2VTdGF0ZSIsInVzZUVmZmVjdCIsInVzZUlucHV0IiwidXNlQXBwIiwidXNlRm9jdXMiLCJUZXh0IiwiQm94IiwiaXRlbXMiLCJsYWJlbCIsImJsb2NrcyIsIlRlc3QiLCJjb2xvciIsInNldENvbG9yIiwiY291bnRlciIsInNldENvdW50ZXIiLCJnZW5lcmF0ZVJhbmRvbUJsb2NrcyIsImkiLCJibG9jayIsImhlaWdodCIsIk1hdGgiLCJyYW5kb20iLCJwdXNoIiwidGltZXIiLCJzZXRJbnRlcnZhbCIsInByZXYiLCJjbGVhckludGVydmFsIiwibWFwIiwiaW5kZXgiLCJtb2R1bGUiLCJleHBvcnRzIl0sInNvdXJjZXMiOlsiVGVzdC5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbmNvbnN0IFJlYWN0ID0gcmVxdWlyZShcInJlYWN0XCIpO1xuY29uc3QgeyB1c2VTdGF0ZSwgdXNlRWZmZWN0IH0gPSByZXF1aXJlKFwicmVhY3RcIik7XG5jb25zdCB7IHVzZUlucHV0LCB1c2VBcHAsIHVzZUZvY3VzLCBUZXh0LCBCb3ggfSA9IHJlcXVpcmUoXCJpbmtcIik7XG5cbmNvbnN0IGl0ZW1zID0gW3sgbGFiZWw6IFwiYVwiIH0sIHsgbGFiZWw6IFwiYlwiIH0sIHsgbGFiZWw6IFwiY1wiIH1dO1xuY29uc3QgYmxvY2tzID0gW107XG5cbmNvbnN0IFRlc3QgPSAoKSA9PiB7XG5cdGNvbnN0IFtjb2xvciwgc2V0Q29sb3JdID0gdXNlU3RhdGUoXCJcIik7XG5cdGNvbnN0IFtjb3VudGVyLCBzZXRDb3VudGVyXSA9IHVzZVN0YXRlKDApO1xuXG5cdGNvbnN0IGdlbmVyYXRlUmFuZG9tQmxvY2tzID0gKCkgPT4ge1xuXHRcdGZvciAobGV0IGkgPSAxOyBpIDwgNDsgaSsrKSB7XG5cdFx0XHRsZXQgYmxvY2sgPSB7XG5cdFx0XHRcdGhlaWdodDogaSAqIE1hdGgucmFuZG9tKCkgKiAxMCxcblx0XHRcdH07XG5cdFx0XHRibG9ja3MucHVzaChibG9jayk7XG5cdFx0fVxuXHR9O1xuXG5cdHVzZUVmZmVjdCgoKSA9PiB7XG5cdFx0Z2VuZXJhdGVSYW5kb21CbG9ja3MoKTtcblx0XHRjb25zdCB0aW1lciA9IHNldEludGVydmFsKCgpID0+IHtcblx0XHRcdHNldENvdW50ZXIoKHByZXYpID0+IHByZXYgKyAxKTtcblx0XHR9LCAxMDApO1xuXHRcdHJldHVybiAoKSA9PiBjbGVhckludGVydmFsKHRpbWVyKTtcblx0fSwgW10pO1xuXG5cdHJldHVybiAoXG5cdFx0PEJveCBmbGV4RGlyZWN0aW9uPVwicm93XCI+XG5cdFx0XHR7YmxvY2tzLm1hcCgoYmxvY2ssIGluZGV4KSA9PiAoXG5cdFx0XHRcdDxCb3hcblx0XHRcdFx0XHRrZXk9e2luZGV4fVxuXHRcdFx0XHRcdGJvcmRlclN0eWxlPVwicm91bmRcIlxuXHRcdFx0XHRcdGhlaWdodD17YmxvY2suaGVpZ2h0fVxuXHRcdFx0XHRcdHdpZHRoPVwiNVwiXG5cdFx0XHRcdFx0Ym9yZGVyQ29sb3I9XCJ3aGl0ZVwiXG5cdFx0XHRcdD5cblx0XHRcdFx0XHQ8VGV4dD57aW5kZXh9PC9UZXh0PlxuXHRcdFx0XHQ8L0JveD5cblx0XHRcdCkpfVxuXHRcdDwvQm94PlxuXHQpO1xufTtcblxubW9kdWxlLmV4cG9ydHMgPSBUZXN0O1xuIl0sIm1hcHBpbmdzIjoiQUFBQTs7QUFDQSxNQUFNQSxLQUFLLEdBQUdDLE9BQU8sQ0FBQyxPQUFELENBQXJCOztBQUNBLE1BQU07RUFBRUMsUUFBRjtFQUFZQztBQUFaLElBQTBCRixPQUFPLENBQUMsT0FBRCxDQUF2Qzs7QUFDQSxNQUFNO0VBQUVHLFFBQUY7RUFBWUMsTUFBWjtFQUFvQkMsUUFBcEI7RUFBOEJDLElBQTlCO0VBQW9DQztBQUFwQyxJQUE0Q1AsT0FBTyxDQUFDLEtBQUQsQ0FBekQ7O0FBRUEsTUFBTVEsS0FBSyxHQUFHLENBQUM7RUFBRUMsS0FBSyxFQUFFO0FBQVQsQ0FBRCxFQUFpQjtFQUFFQSxLQUFLLEVBQUU7QUFBVCxDQUFqQixFQUFpQztFQUFFQSxLQUFLLEVBQUU7QUFBVCxDQUFqQyxDQUFkO0FBQ0EsTUFBTUMsTUFBTSxHQUFHLEVBQWY7O0FBRUEsTUFBTUMsSUFBSSxHQUFHLE1BQU07RUFDbEIsTUFBTSxDQUFDQyxLQUFELEVBQVFDLFFBQVIsSUFBb0JaLFFBQVEsQ0FBQyxFQUFELENBQWxDO0VBQ0EsTUFBTSxDQUFDYSxPQUFELEVBQVVDLFVBQVYsSUFBd0JkLFFBQVEsQ0FBQyxDQUFELENBQXRDOztFQUVBLE1BQU1lLG9CQUFvQixHQUFHLE1BQU07SUFDbEMsS0FBSyxJQUFJQyxDQUFDLEdBQUcsQ0FBYixFQUFnQkEsQ0FBQyxHQUFHLENBQXBCLEVBQXVCQSxDQUFDLEVBQXhCLEVBQTRCO01BQzNCLElBQUlDLEtBQUssR0FBRztRQUNYQyxNQUFNLEVBQUVGLENBQUMsR0FBR0csSUFBSSxDQUFDQyxNQUFMLEVBQUosR0FBb0I7TUFEakIsQ0FBWjtNQUdBWCxNQUFNLENBQUNZLElBQVAsQ0FBWUosS0FBWjtJQUNBO0VBQ0QsQ0FQRDs7RUFTQWhCLFNBQVMsQ0FBQyxNQUFNO0lBQ2ZjLG9CQUFvQjtJQUNwQixNQUFNTyxLQUFLLEdBQUdDLFdBQVcsQ0FBQyxNQUFNO01BQy9CVCxVQUFVLENBQUVVLElBQUQsSUFBVUEsSUFBSSxHQUFHLENBQWxCLENBQVY7SUFDQSxDQUZ3QixFQUV0QixHQUZzQixDQUF6QjtJQUdBLE9BQU8sTUFBTUMsYUFBYSxDQUFDSCxLQUFELENBQTFCO0VBQ0EsQ0FOUSxFQU1OLEVBTk0sQ0FBVDtFQVFBLG9CQUNDLG9CQUFDLEdBQUQ7SUFBSyxhQUFhLEVBQUM7RUFBbkIsR0FDRWIsTUFBTSxDQUFDaUIsR0FBUCxDQUFXLENBQUNULEtBQUQsRUFBUVUsS0FBUixrQkFDWCxvQkFBQyxHQUFEO0lBQ0MsR0FBRyxFQUFFQSxLQUROO0lBRUMsV0FBVyxFQUFDLE9BRmI7SUFHQyxNQUFNLEVBQUVWLEtBQUssQ0FBQ0MsTUFIZjtJQUlDLEtBQUssRUFBQyxHQUpQO0lBS0MsV0FBVyxFQUFDO0VBTGIsZ0JBT0Msb0JBQUMsSUFBRCxRQUFPUyxLQUFQLENBUEQsQ0FEQSxDQURGLENBREQ7QUFlQSxDQXBDRDs7QUFzQ0FDLE1BQU0sQ0FBQ0MsT0FBUCxHQUFpQm5CLElBQWpCIn0=