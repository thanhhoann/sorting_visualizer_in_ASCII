"use strict";

const React = require("react");

const {
  useState,
  useEffect
} = require("react");

const {
  useInput,
  useApp,
  useFocus,
  Text,
  Box
} = require("ink");

const items = [{
  label: "a"
}, {
  label: "b"
}, {
  label: "c"
}];
const blocks = [];

const Test = () => {
  const [color, setColor] = useState("");
  const [counter, setCounter] = useState(0);

  const generateRandomBlocks = () => {
    let block = {
      height: Math.random(),
      width: Math.random()
    };
    blocks.push(block);
  };

  useEffect(() => {
    while (i < 10) {
      generateRandomBlocks();
      i++;
    }

    const timer = setInterval(() => {
      setCounter(prev => prev + 1);
    }, 100);
    return () => clearInterval(timer);
  }, []);
  return /*#__PURE__*/React.createElement(Box, {
    flexDirection: "row"
  }, blocks.map((block, index) => /*#__PURE__*/React.createElement(Box, {
    key: index,
    borderStyle: "round",
    height: block.height,
    width: block.width,
    borderColor: "white"
  }, /*#__PURE__*/React.createElement(Text, null, index))));
};

module.exports = Test;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJSZWFjdCIsInJlcXVpcmUiLCJ1c2VTdGF0ZSIsInVzZUVmZmVjdCIsInVzZUlucHV0IiwidXNlQXBwIiwidXNlRm9jdXMiLCJUZXh0IiwiQm94IiwiaXRlbXMiLCJsYWJlbCIsImJsb2NrcyIsIlRlc3QiLCJjb2xvciIsInNldENvbG9yIiwiY291bnRlciIsInNldENvdW50ZXIiLCJnZW5lcmF0ZVJhbmRvbUJsb2NrcyIsImJsb2NrIiwiaGVpZ2h0IiwiTWF0aCIsInJhbmRvbSIsIndpZHRoIiwicHVzaCIsImkiLCJ0aW1lciIsInNldEludGVydmFsIiwicHJldiIsImNsZWFySW50ZXJ2YWwiLCJtYXAiLCJpbmRleCIsIm1vZHVsZSIsImV4cG9ydHMiXSwic291cmNlcyI6WyJUZXN0LmpzIl0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuY29uc3QgUmVhY3QgPSByZXF1aXJlKFwicmVhY3RcIik7XG5jb25zdCB7IHVzZVN0YXRlLCB1c2VFZmZlY3QgfSA9IHJlcXVpcmUoXCJyZWFjdFwiKTtcbmNvbnN0IHsgdXNlSW5wdXQsIHVzZUFwcCwgdXNlRm9jdXMsIFRleHQsIEJveCB9ID0gcmVxdWlyZShcImlua1wiKTtcblxuY29uc3QgaXRlbXMgPSBbeyBsYWJlbDogXCJhXCIgfSwgeyBsYWJlbDogXCJiXCIgfSwgeyBsYWJlbDogXCJjXCIgfV07XG5jb25zdCBibG9ja3MgPSBbXTtcblxuY29uc3QgVGVzdCA9ICgpID0+IHtcblx0Y29uc3QgW2NvbG9yLCBzZXRDb2xvcl0gPSB1c2VTdGF0ZShcIlwiKTtcblx0Y29uc3QgW2NvdW50ZXIsIHNldENvdW50ZXJdID0gdXNlU3RhdGUoMCk7XG5cblx0Y29uc3QgZ2VuZXJhdGVSYW5kb21CbG9ja3MgPSAoKSA9PiB7XG5cdFx0bGV0IGJsb2NrID0geyBoZWlnaHQ6IE1hdGgucmFuZG9tKCksIHdpZHRoOiBNYXRoLnJhbmRvbSgpIH07XG5cdFx0YmxvY2tzLnB1c2goYmxvY2spO1xuXHR9O1xuXG5cdHVzZUVmZmVjdCgoKSA9PiB7XG5cdFx0d2hpbGUgKGkgPCAxMCkge1xuXHRcdFx0Z2VuZXJhdGVSYW5kb21CbG9ja3MoKTtcblx0XHRcdGkrKztcblx0XHR9XG5cdFx0Y29uc3QgdGltZXIgPSBzZXRJbnRlcnZhbCgoKSA9PiB7XG5cdFx0XHRzZXRDb3VudGVyKChwcmV2KSA9PiBwcmV2ICsgMSk7XG5cdFx0fSwgMTAwKTtcblx0XHRyZXR1cm4gKCkgPT4gY2xlYXJJbnRlcnZhbCh0aW1lcik7XG5cdH0sIFtdKTtcblxuXHRyZXR1cm4gKFxuXHRcdDxCb3ggZmxleERpcmVjdGlvbj1cInJvd1wiPlxuXHRcdFx0e2Jsb2Nrcy5tYXAoKGJsb2NrLCBpbmRleCkgPT4gKFxuXHRcdFx0XHQ8Qm94XG5cdFx0XHRcdFx0a2V5PXtpbmRleH1cblx0XHRcdFx0XHRib3JkZXJTdHlsZT1cInJvdW5kXCJcblx0XHRcdFx0XHRoZWlnaHQ9e2Jsb2NrLmhlaWdodH1cblx0XHRcdFx0XHR3aWR0aD17YmxvY2sud2lkdGh9XG5cdFx0XHRcdFx0Ym9yZGVyQ29sb3I9XCJ3aGl0ZVwiXG5cdFx0XHRcdD5cblx0XHRcdFx0XHQ8VGV4dD57aW5kZXh9PC9UZXh0PlxuXHRcdFx0XHQ8L0JveD5cblx0XHRcdCkpfVxuXHRcdDwvQm94PlxuXHQpO1xufTtcblxubW9kdWxlLmV4cG9ydHMgPSBUZXN0O1xuIl0sIm1hcHBpbmdzIjoiQUFBQTs7QUFDQSxNQUFNQSxLQUFLLEdBQUdDLE9BQU8sQ0FBQyxPQUFELENBQXJCOztBQUNBLE1BQU07RUFBRUMsUUFBRjtFQUFZQztBQUFaLElBQTBCRixPQUFPLENBQUMsT0FBRCxDQUF2Qzs7QUFDQSxNQUFNO0VBQUVHLFFBQUY7RUFBWUMsTUFBWjtFQUFvQkMsUUFBcEI7RUFBOEJDLElBQTlCO0VBQW9DQztBQUFwQyxJQUE0Q1AsT0FBTyxDQUFDLEtBQUQsQ0FBekQ7O0FBRUEsTUFBTVEsS0FBSyxHQUFHLENBQUM7RUFBRUMsS0FBSyxFQUFFO0FBQVQsQ0FBRCxFQUFpQjtFQUFFQSxLQUFLLEVBQUU7QUFBVCxDQUFqQixFQUFpQztFQUFFQSxLQUFLLEVBQUU7QUFBVCxDQUFqQyxDQUFkO0FBQ0EsTUFBTUMsTUFBTSxHQUFHLEVBQWY7O0FBRUEsTUFBTUMsSUFBSSxHQUFHLE1BQU07RUFDbEIsTUFBTSxDQUFDQyxLQUFELEVBQVFDLFFBQVIsSUFBb0JaLFFBQVEsQ0FBQyxFQUFELENBQWxDO0VBQ0EsTUFBTSxDQUFDYSxPQUFELEVBQVVDLFVBQVYsSUFBd0JkLFFBQVEsQ0FBQyxDQUFELENBQXRDOztFQUVBLE1BQU1lLG9CQUFvQixHQUFHLE1BQU07SUFDbEMsSUFBSUMsS0FBSyxHQUFHO01BQUVDLE1BQU0sRUFBRUMsSUFBSSxDQUFDQyxNQUFMLEVBQVY7TUFBeUJDLEtBQUssRUFBRUYsSUFBSSxDQUFDQyxNQUFMO0lBQWhDLENBQVo7SUFDQVYsTUFBTSxDQUFDWSxJQUFQLENBQVlMLEtBQVo7RUFDQSxDQUhEOztFQUtBZixTQUFTLENBQUMsTUFBTTtJQUNmLE9BQU9xQixDQUFDLEdBQUcsRUFBWCxFQUFlO01BQ2RQLG9CQUFvQjtNQUNwQk8sQ0FBQztJQUNEOztJQUNELE1BQU1DLEtBQUssR0FBR0MsV0FBVyxDQUFDLE1BQU07TUFDL0JWLFVBQVUsQ0FBRVcsSUFBRCxJQUFVQSxJQUFJLEdBQUcsQ0FBbEIsQ0FBVjtJQUNBLENBRndCLEVBRXRCLEdBRnNCLENBQXpCO0lBR0EsT0FBTyxNQUFNQyxhQUFhLENBQUNILEtBQUQsQ0FBMUI7RUFDQSxDQVRRLEVBU04sRUFUTSxDQUFUO0VBV0Esb0JBQ0Msb0JBQUMsR0FBRDtJQUFLLGFBQWEsRUFBQztFQUFuQixHQUNFZCxNQUFNLENBQUNrQixHQUFQLENBQVcsQ0FBQ1gsS0FBRCxFQUFRWSxLQUFSLGtCQUNYLG9CQUFDLEdBQUQ7SUFDQyxHQUFHLEVBQUVBLEtBRE47SUFFQyxXQUFXLEVBQUMsT0FGYjtJQUdDLE1BQU0sRUFBRVosS0FBSyxDQUFDQyxNQUhmO0lBSUMsS0FBSyxFQUFFRCxLQUFLLENBQUNJLEtBSmQ7SUFLQyxXQUFXLEVBQUM7RUFMYixnQkFPQyxvQkFBQyxJQUFELFFBQU9RLEtBQVAsQ0FQRCxDQURBLENBREYsQ0FERDtBQWVBLENBbkNEOztBQXFDQUMsTUFBTSxDQUFDQyxPQUFQLEdBQWlCcEIsSUFBakIifQ==