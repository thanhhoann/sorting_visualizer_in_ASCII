"use strict";

const React = require("react");

const {
  useState,
  useEffect
} = require("react");

const {
  useInput,
  useApp,
  useFocus,
  Text,
  Box
} = require("ink");

const items = [{
  label: "a"
}, {
  label: "b"
}, {
  label: "c"
}];

const Focus = () => {
  const [content, setContent] = useState("");
  return /*#__PURE__*/React.createElement(Box, {
    flexDirection: "column",
    padding: 1
  }, /*#__PURE__*/React.createElement(Box, {
    marginBottom: 1
  }), items.map((item, index) => /*#__PURE__*/React.createElement(Item, {
    key: index,
    label: item.label,
    getFocusedItem: e => setContent(e)
  })), /*#__PURE__*/React.createElement(Text, null, "You chose ", content));
};

const Item = ({
  label,
  getFocusedItem
}) => {
  const {
    exit
  } = useApp();
  const {
    isFocused
  } = useFocus();
  useInput((input, key) => {
    if (input === "q") {
      exit();
    }

    if (key.return) {
      isFocused && getFocusedItem(label);
    }
  });
  return /*#__PURE__*/React.createElement(Box, {
    borderStyle: "round",
    borderColor: isFocused ? "green" : "white"
  }, /*#__PURE__*/React.createElement(Text, null, label));
};

module.exports = Focus;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJSZWFjdCIsInJlcXVpcmUiLCJ1c2VTdGF0ZSIsInVzZUVmZmVjdCIsInVzZUlucHV0IiwidXNlQXBwIiwidXNlRm9jdXMiLCJUZXh0IiwiQm94IiwiaXRlbXMiLCJsYWJlbCIsIkZvY3VzIiwiY29udGVudCIsInNldENvbnRlbnQiLCJtYXAiLCJpdGVtIiwiaW5kZXgiLCJlIiwiSXRlbSIsImdldEZvY3VzZWRJdGVtIiwiZXhpdCIsImlzRm9jdXNlZCIsImlucHV0Iiwia2V5IiwicmV0dXJuIiwibW9kdWxlIiwiZXhwb3J0cyJdLCJzb3VyY2VzIjpbIkZvY3VzLmpzIl0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuY29uc3QgUmVhY3QgPSByZXF1aXJlKFwicmVhY3RcIik7XG5jb25zdCB7IHVzZVN0YXRlLCB1c2VFZmZlY3QgfSA9IHJlcXVpcmUoXCJyZWFjdFwiKTtcbmNvbnN0IHsgdXNlSW5wdXQsIHVzZUFwcCwgdXNlRm9jdXMsIFRleHQsIEJveCB9ID0gcmVxdWlyZShcImlua1wiKTtcblxuY29uc3QgaXRlbXMgPSBbeyBsYWJlbDogXCJhXCIgfSwgeyBsYWJlbDogXCJiXCIgfSwgeyBsYWJlbDogXCJjXCIgfV07XG5cbmNvbnN0IEZvY3VzID0gKCkgPT4ge1xuXHRjb25zdCBbY29udGVudCwgc2V0Q29udGVudF0gPSB1c2VTdGF0ZShcIlwiKTtcblxuXHRyZXR1cm4gKFxuXHRcdDxCb3ggZmxleERpcmVjdGlvbj1cImNvbHVtblwiIHBhZGRpbmc9ezF9PlxuXHRcdFx0PEJveCBtYXJnaW5Cb3R0b209ezF9PjwvQm94PlxuXHRcdFx0e2l0ZW1zLm1hcCgoaXRlbSwgaW5kZXgpID0+IChcblx0XHRcdFx0PEl0ZW1cblx0XHRcdFx0XHRrZXk9e2luZGV4fVxuXHRcdFx0XHRcdGxhYmVsPXtpdGVtLmxhYmVsfVxuXHRcdFx0XHRcdGdldEZvY3VzZWRJdGVtPXsoZSkgPT4gc2V0Q29udGVudChlKX1cblx0XHRcdFx0Lz5cblx0XHRcdCkpfVxuXHRcdFx0PFRleHQ+WW91IGNob3NlIHtjb250ZW50fTwvVGV4dD5cblx0XHQ8L0JveD5cblx0KTtcbn07XG5cbmNvbnN0IEl0ZW0gPSAoeyBsYWJlbCwgZ2V0Rm9jdXNlZEl0ZW0gfSkgPT4ge1xuXHRjb25zdCB7IGV4aXQgfSA9IHVzZUFwcCgpO1xuXHRjb25zdCB7IGlzRm9jdXNlZCB9ID0gdXNlRm9jdXMoKTtcblx0dXNlSW5wdXQoKGlucHV0LCBrZXkpID0+IHtcblx0XHRpZiAoaW5wdXQgPT09IFwicVwiKSB7XG5cdFx0XHRleGl0KCk7XG5cdFx0fVxuXG5cdFx0aWYgKGtleS5yZXR1cm4pIHtcblx0XHRcdGlzRm9jdXNlZCAmJiBnZXRGb2N1c2VkSXRlbShsYWJlbCk7XG5cdFx0fVxuXHR9KTtcblxuXHRyZXR1cm4gKFxuXHRcdDxCb3ggYm9yZGVyU3R5bGU9XCJyb3VuZFwiIGJvcmRlckNvbG9yPXtpc0ZvY3VzZWQgPyBcImdyZWVuXCIgOiBcIndoaXRlXCJ9PlxuXHRcdFx0PFRleHQ+e2xhYmVsfTwvVGV4dD5cblx0XHQ8L0JveD5cblx0KTtcbn07XG5cbm1vZHVsZS5leHBvcnRzID0gRm9jdXM7XG4iXSwibWFwcGluZ3MiOiJBQUFBOztBQUNBLE1BQU1BLEtBQUssR0FBR0MsT0FBTyxDQUFDLE9BQUQsQ0FBckI7O0FBQ0EsTUFBTTtFQUFFQyxRQUFGO0VBQVlDO0FBQVosSUFBMEJGLE9BQU8sQ0FBQyxPQUFELENBQXZDOztBQUNBLE1BQU07RUFBRUcsUUFBRjtFQUFZQyxNQUFaO0VBQW9CQyxRQUFwQjtFQUE4QkMsSUFBOUI7RUFBb0NDO0FBQXBDLElBQTRDUCxPQUFPLENBQUMsS0FBRCxDQUF6RDs7QUFFQSxNQUFNUSxLQUFLLEdBQUcsQ0FBQztFQUFFQyxLQUFLLEVBQUU7QUFBVCxDQUFELEVBQWlCO0VBQUVBLEtBQUssRUFBRTtBQUFULENBQWpCLEVBQWlDO0VBQUVBLEtBQUssRUFBRTtBQUFULENBQWpDLENBQWQ7O0FBRUEsTUFBTUMsS0FBSyxHQUFHLE1BQU07RUFDbkIsTUFBTSxDQUFDQyxPQUFELEVBQVVDLFVBQVYsSUFBd0JYLFFBQVEsQ0FBQyxFQUFELENBQXRDO0VBRUEsb0JBQ0Msb0JBQUMsR0FBRDtJQUFLLGFBQWEsRUFBQyxRQUFuQjtJQUE0QixPQUFPLEVBQUU7RUFBckMsZ0JBQ0Msb0JBQUMsR0FBRDtJQUFLLFlBQVksRUFBRTtFQUFuQixFQURELEVBRUVPLEtBQUssQ0FBQ0ssR0FBTixDQUFVLENBQUNDLElBQUQsRUFBT0MsS0FBUCxrQkFDVixvQkFBQyxJQUFEO0lBQ0MsR0FBRyxFQUFFQSxLQUROO0lBRUMsS0FBSyxFQUFFRCxJQUFJLENBQUNMLEtBRmI7SUFHQyxjQUFjLEVBQUdPLENBQUQsSUFBT0osVUFBVSxDQUFDSSxDQUFEO0VBSGxDLEVBREEsQ0FGRixlQVNDLG9CQUFDLElBQUQsc0JBQWlCTCxPQUFqQixDQVRELENBREQ7QUFhQSxDQWhCRDs7QUFrQkEsTUFBTU0sSUFBSSxHQUFHLENBQUM7RUFBRVIsS0FBRjtFQUFTUztBQUFULENBQUQsS0FBK0I7RUFDM0MsTUFBTTtJQUFFQztFQUFGLElBQVdmLE1BQU0sRUFBdkI7RUFDQSxNQUFNO0lBQUVnQjtFQUFGLElBQWdCZixRQUFRLEVBQTlCO0VBQ0FGLFFBQVEsQ0FBQyxDQUFDa0IsS0FBRCxFQUFRQyxHQUFSLEtBQWdCO0lBQ3hCLElBQUlELEtBQUssS0FBSyxHQUFkLEVBQW1CO01BQ2xCRixJQUFJO0lBQ0o7O0lBRUQsSUFBSUcsR0FBRyxDQUFDQyxNQUFSLEVBQWdCO01BQ2ZILFNBQVMsSUFBSUYsY0FBYyxDQUFDVCxLQUFELENBQTNCO0lBQ0E7RUFDRCxDQVJPLENBQVI7RUFVQSxvQkFDQyxvQkFBQyxHQUFEO0lBQUssV0FBVyxFQUFDLE9BQWpCO0lBQXlCLFdBQVcsRUFBRVcsU0FBUyxHQUFHLE9BQUgsR0FBYTtFQUE1RCxnQkFDQyxvQkFBQyxJQUFELFFBQU9YLEtBQVAsQ0FERCxDQUREO0FBS0EsQ0FsQkQ7O0FBb0JBZSxNQUFNLENBQUNDLE9BQVAsR0FBaUJmLEtBQWpCIn0=