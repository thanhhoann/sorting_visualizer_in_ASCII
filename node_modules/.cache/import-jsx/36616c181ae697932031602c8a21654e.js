"use strict";

const React = require("react");

const {
  useState,
  useEffect
} = require("react");

const {
  useInput,
  useApp,
  Text,
  Box
} = require("ink");

const App = () => {
  const {
    exit
  } = useApp();
  const [x, setX] = React.useState(1);
  const [y, setY] = React.useState(1);
  useInput((input, key) => {
    if (input === "q") {
      exit();
    }

    if (key.leftArrow) {
      setX(Math.max(1, x - 1));
    }

    if (key.rightArrow) {
      setX(Math.min(20, x + 1));
    }

    if (key.upArrow) {
      setY(Math.max(1, y - 1));
    }

    if (key.downArrow) {
      setY(Math.min(10, y + 1));
    }
  });
  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Box, {
    flexDirection: "column"
  }, /*#__PURE__*/React.createElement(Text, null, "Use arrow keys to move the icon. Press \"q\" to exit."), /*#__PURE__*/React.createElement(Box, {
    height: 12,
    paddingLeft: x,
    paddingTop: y
  }, /*#__PURE__*/React.createElement(Text, null, "\uD83D\uDE01"))));
};

module.exports = App;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJSZWFjdCIsInJlcXVpcmUiLCJ1c2VTdGF0ZSIsInVzZUVmZmVjdCIsInVzZUlucHV0IiwidXNlQXBwIiwiVGV4dCIsIkJveCIsIkFwcCIsImV4aXQiLCJ4Iiwic2V0WCIsInkiLCJzZXRZIiwiaW5wdXQiLCJrZXkiLCJsZWZ0QXJyb3ciLCJNYXRoIiwibWF4IiwicmlnaHRBcnJvdyIsIm1pbiIsInVwQXJyb3ciLCJkb3duQXJyb3ciLCJtb2R1bGUiLCJleHBvcnRzIl0sInNvdXJjZXMiOlsidWkuanMiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5jb25zdCBSZWFjdCA9IHJlcXVpcmUoXCJyZWFjdFwiKTtcbmNvbnN0IHsgdXNlU3RhdGUsIHVzZUVmZmVjdCB9ID0gcmVxdWlyZShcInJlYWN0XCIpO1xuY29uc3QgeyB1c2VJbnB1dCwgdXNlQXBwLCBUZXh0LCBCb3ggfSA9IHJlcXVpcmUoXCJpbmtcIik7XG5cbmNvbnN0IEFwcCA9ICgpID0+IHtcblx0Y29uc3QgeyBleGl0IH0gPSB1c2VBcHAoKTtcblx0Y29uc3QgW3gsIHNldFhdID0gUmVhY3QudXNlU3RhdGUoMSk7XG5cdGNvbnN0IFt5LCBzZXRZXSA9IFJlYWN0LnVzZVN0YXRlKDEpO1xuXG5cdHVzZUlucHV0KChpbnB1dCwga2V5KSA9PiB7XG5cdFx0aWYgKGlucHV0ID09PSBcInFcIikge1xuXHRcdFx0ZXhpdCgpO1xuXHRcdH1cblxuXHRcdGlmIChrZXkubGVmdEFycm93KSB7XG5cdFx0XHRzZXRYKE1hdGgubWF4KDEsIHggLSAxKSk7XG5cdFx0fVxuXG5cdFx0aWYgKGtleS5yaWdodEFycm93KSB7XG5cdFx0XHRzZXRYKE1hdGgubWluKDIwLCB4ICsgMSkpO1xuXHRcdH1cblxuXHRcdGlmIChrZXkudXBBcnJvdykge1xuXHRcdFx0c2V0WShNYXRoLm1heCgxLCB5IC0gMSkpO1xuXHRcdH1cblxuXHRcdGlmIChrZXkuZG93bkFycm93KSB7XG5cdFx0XHRzZXRZKE1hdGgubWluKDEwLCB5ICsgMSkpO1xuXHRcdH1cblx0fSk7XG5cblx0cmV0dXJuIChcblx0XHQ8PlxuXHRcdFx0PEJveCBmbGV4RGlyZWN0aW9uPVwiY29sdW1uXCI+XG5cdFx0XHRcdDxUZXh0PlVzZSBhcnJvdyBrZXlzIHRvIG1vdmUgdGhlIGljb24uIFByZXNzIFwicVwiIHRvIGV4aXQuPC9UZXh0PlxuXHRcdFx0XHQ8Qm94IGhlaWdodD17MTJ9IHBhZGRpbmdMZWZ0PXt4fSBwYWRkaW5nVG9wPXt5fT5cblx0XHRcdFx0XHQ8VGV4dD7wn5iBPC9UZXh0PlxuXHRcdFx0XHQ8L0JveD5cblx0XHRcdDwvQm94PlxuXHRcdDwvPlxuXHQpO1xufTtcblxubW9kdWxlLmV4cG9ydHMgPSBBcHA7XG4iXSwibWFwcGluZ3MiOiJBQUFBOztBQUNBLE1BQU1BLEtBQUssR0FBR0MsT0FBTyxDQUFDLE9BQUQsQ0FBckI7O0FBQ0EsTUFBTTtFQUFFQyxRQUFGO0VBQVlDO0FBQVosSUFBMEJGLE9BQU8sQ0FBQyxPQUFELENBQXZDOztBQUNBLE1BQU07RUFBRUcsUUFBRjtFQUFZQyxNQUFaO0VBQW9CQyxJQUFwQjtFQUEwQkM7QUFBMUIsSUFBa0NOLE9BQU8sQ0FBQyxLQUFELENBQS9DOztBQUVBLE1BQU1PLEdBQUcsR0FBRyxNQUFNO0VBQ2pCLE1BQU07SUFBRUM7RUFBRixJQUFXSixNQUFNLEVBQXZCO0VBQ0EsTUFBTSxDQUFDSyxDQUFELEVBQUlDLElBQUosSUFBWVgsS0FBSyxDQUFDRSxRQUFOLENBQWUsQ0FBZixDQUFsQjtFQUNBLE1BQU0sQ0FBQ1UsQ0FBRCxFQUFJQyxJQUFKLElBQVliLEtBQUssQ0FBQ0UsUUFBTixDQUFlLENBQWYsQ0FBbEI7RUFFQUUsUUFBUSxDQUFDLENBQUNVLEtBQUQsRUFBUUMsR0FBUixLQUFnQjtJQUN4QixJQUFJRCxLQUFLLEtBQUssR0FBZCxFQUFtQjtNQUNsQkwsSUFBSTtJQUNKOztJQUVELElBQUlNLEdBQUcsQ0FBQ0MsU0FBUixFQUFtQjtNQUNsQkwsSUFBSSxDQUFDTSxJQUFJLENBQUNDLEdBQUwsQ0FBUyxDQUFULEVBQVlSLENBQUMsR0FBRyxDQUFoQixDQUFELENBQUo7SUFDQTs7SUFFRCxJQUFJSyxHQUFHLENBQUNJLFVBQVIsRUFBb0I7TUFDbkJSLElBQUksQ0FBQ00sSUFBSSxDQUFDRyxHQUFMLENBQVMsRUFBVCxFQUFhVixDQUFDLEdBQUcsQ0FBakIsQ0FBRCxDQUFKO0lBQ0E7O0lBRUQsSUFBSUssR0FBRyxDQUFDTSxPQUFSLEVBQWlCO01BQ2hCUixJQUFJLENBQUNJLElBQUksQ0FBQ0MsR0FBTCxDQUFTLENBQVQsRUFBWU4sQ0FBQyxHQUFHLENBQWhCLENBQUQsQ0FBSjtJQUNBOztJQUVELElBQUlHLEdBQUcsQ0FBQ08sU0FBUixFQUFtQjtNQUNsQlQsSUFBSSxDQUFDSSxJQUFJLENBQUNHLEdBQUwsQ0FBUyxFQUFULEVBQWFSLENBQUMsR0FBRyxDQUFqQixDQUFELENBQUo7SUFDQTtFQUNELENBcEJPLENBQVI7RUFzQkEsb0JBQ0MsdURBQ0Msb0JBQUMsR0FBRDtJQUFLLGFBQWEsRUFBQztFQUFuQixnQkFDQyxvQkFBQyxJQUFELGdFQURELGVBRUMsb0JBQUMsR0FBRDtJQUFLLE1BQU0sRUFBRSxFQUFiO0lBQWlCLFdBQVcsRUFBRUYsQ0FBOUI7SUFBaUMsVUFBVSxFQUFFRTtFQUE3QyxnQkFDQyxvQkFBQyxJQUFELHVCQURELENBRkQsQ0FERCxDQUREO0FBVUEsQ0FyQ0Q7O0FBdUNBVyxNQUFNLENBQUNDLE9BQVAsR0FBaUJoQixHQUFqQiJ9