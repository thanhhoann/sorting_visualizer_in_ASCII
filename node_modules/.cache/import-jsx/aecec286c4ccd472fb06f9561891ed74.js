"use strict";

const React = require("react");

const {
  Text,
  Box
} = require("ink");

const TextInput = require("ink-text-input").default;

const wcc = require("world-countries-capitals");

const App = () => {
  const [country, setCountry] = React.useState("");
  const [capital, setCapital] = React.useState("");
  const [currency, setCurrency] = React.useState("");
  const [phone, setPhone] = React.useState("");
  React.useEffect(() => {
    const getCountry = wcc.getCountryDetailsByName(country);
    setCapital(getCountry[0].capital);
    setCurrency(getCountry[0].currency);
    setPhone(getCountry[0].phone_code);
  });
  return /*#__PURE__*/React.createElement(Box, {
    borderStyle: "round",
    borderColor: "yellowBright"
  }, /*#__PURE__*/React.createElement(Box, {
    borderStyle: "round",
    borderColor: "green"
  }, /*#__PURE__*/React.createElement(Text, null, "Welcome to Country CLI")), /*#__PURE__*/React.createElement(TextInput, {
    placeholder: "Enter a country ...",
    value: country,
    onChange: setCountry
  }), /*#__PURE__*/React.createElement(Box, {
    flexDirection: "column",
    width: 80,
    borderStyle: "single"
  }, /*#__PURE__*/React.createElement(Box, null, /*#__PURE__*/React.createElement(Box, {
    width: "40%"
  }, /*#__PURE__*/React.createElement(Text, null, "Country Code")), /*#__PURE__*/React.createElement(Box, {
    width: "40%"
  }, /*#__PURE__*/React.createElement(Text, null, "Capital City")), /*#__PURE__*/React.createElement(Box, {
    width: "40%"
  }, /*#__PURE__*/React.createElement(Text, null, "Currency"))), /*#__PURE__*/React.createElement(Box, null, /*#__PURE__*/React.createElement(Box, {
    width: "40%"
  }, /*#__PURE__*/React.createElement(Text, null, phone)), /*#__PURE__*/React.createElement(Box, {
    width: "40%"
  }, /*#__PURE__*/React.createElement(Text, null, capital)), /*#__PURE__*/React.createElement(Box, {
    width: "40%"
  }, /*#__PURE__*/React.createElement(Text, null, currency)))), ";");
};

module.exports = App;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJSZWFjdCIsInJlcXVpcmUiLCJUZXh0IiwiQm94IiwiVGV4dElucHV0IiwiZGVmYXVsdCIsIndjYyIsIkFwcCIsImNvdW50cnkiLCJzZXRDb3VudHJ5IiwidXNlU3RhdGUiLCJjYXBpdGFsIiwic2V0Q2FwaXRhbCIsImN1cnJlbmN5Iiwic2V0Q3VycmVuY3kiLCJwaG9uZSIsInNldFBob25lIiwidXNlRWZmZWN0IiwiZ2V0Q291bnRyeSIsImdldENvdW50cnlEZXRhaWxzQnlOYW1lIiwicGhvbmVfY29kZSIsIm1vZHVsZSIsImV4cG9ydHMiXSwic291cmNlcyI6WyJ1aS5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbmNvbnN0IFJlYWN0ID0gcmVxdWlyZShcInJlYWN0XCIpO1xuY29uc3QgeyBUZXh0LCBCb3ggfSA9IHJlcXVpcmUoXCJpbmtcIik7XG5jb25zdCBUZXh0SW5wdXQgPSByZXF1aXJlKFwiaW5rLXRleHQtaW5wdXRcIikuZGVmYXVsdDtcbmNvbnN0IHdjYyA9IHJlcXVpcmUoXCJ3b3JsZC1jb3VudHJpZXMtY2FwaXRhbHNcIik7XG5cbmNvbnN0IEFwcCA9ICgpID0+IHtcblx0Y29uc3QgW2NvdW50cnksIHNldENvdW50cnldID0gUmVhY3QudXNlU3RhdGUoXCJcIik7XG5cdGNvbnN0IFtjYXBpdGFsLCBzZXRDYXBpdGFsXSA9IFJlYWN0LnVzZVN0YXRlKFwiXCIpO1xuXHRjb25zdCBbY3VycmVuY3ksIHNldEN1cnJlbmN5XSA9IFJlYWN0LnVzZVN0YXRlKFwiXCIpO1xuXHRjb25zdCBbcGhvbmUsIHNldFBob25lXSA9IFJlYWN0LnVzZVN0YXRlKFwiXCIpO1xuXG5cdFJlYWN0LnVzZUVmZmVjdCgoKSA9PiB7XG5cdFx0Y29uc3QgZ2V0Q291bnRyeSA9IHdjYy5nZXRDb3VudHJ5RGV0YWlsc0J5TmFtZShjb3VudHJ5KTtcblx0XHRzZXRDYXBpdGFsKGdldENvdW50cnlbMF0uY2FwaXRhbCk7XG5cdFx0c2V0Q3VycmVuY3koZ2V0Q291bnRyeVswXS5jdXJyZW5jeSk7XG5cdFx0c2V0UGhvbmUoZ2V0Q291bnRyeVswXS5waG9uZV9jb2RlKTtcblx0fSk7XG5cblx0cmV0dXJuIChcblx0XHQ8Qm94IGJvcmRlclN0eWxlPVwicm91bmRcIiBib3JkZXJDb2xvcj1cInllbGxvd0JyaWdodFwiPlxuXHRcdFx0PEJveCBib3JkZXJTdHlsZT1cInJvdW5kXCIgYm9yZGVyQ29sb3I9XCJncmVlblwiPlxuXHRcdFx0XHQ8VGV4dD5XZWxjb21lIHRvIENvdW50cnkgQ0xJPC9UZXh0PlxuXHRcdFx0PC9Cb3g+XG5cblx0XHRcdDxUZXh0SW5wdXRcblx0XHRcdFx0cGxhY2Vob2xkZXI9XCJFbnRlciBhIGNvdW50cnkgLi4uXCJcblx0XHRcdFx0dmFsdWU9e2NvdW50cnl9XG5cdFx0XHRcdG9uQ2hhbmdlPXtzZXRDb3VudHJ5fVxuXHRcdFx0Lz5cblx0XHRcdDxCb3ggZmxleERpcmVjdGlvbj1cImNvbHVtblwiIHdpZHRoPXs4MH0gYm9yZGVyU3R5bGU9XCJzaW5nbGVcIj5cblx0XHRcdFx0PEJveD5cblx0XHRcdFx0XHQ8Qm94IHdpZHRoPVwiNDAlXCI+XG5cdFx0XHRcdFx0XHQ8VGV4dD5Db3VudHJ5IENvZGU8L1RleHQ+XG5cdFx0XHRcdFx0PC9Cb3g+XG5cdFx0XHRcdFx0PEJveCB3aWR0aD1cIjQwJVwiPlxuXHRcdFx0XHRcdFx0PFRleHQ+Q2FwaXRhbCBDaXR5PC9UZXh0PlxuXHRcdFx0XHRcdDwvQm94PlxuXHRcdFx0XHRcdDxCb3ggd2lkdGg9XCI0MCVcIj5cblx0XHRcdFx0XHRcdDxUZXh0PkN1cnJlbmN5PC9UZXh0PlxuXHRcdFx0XHRcdDwvQm94PlxuXHRcdFx0XHQ8L0JveD5cblx0XHRcdFx0PEJveD5cblx0XHRcdFx0XHQ8Qm94IHdpZHRoPVwiNDAlXCI+XG5cdFx0XHRcdFx0XHQ8VGV4dD57cGhvbmV9PC9UZXh0PlxuXHRcdFx0XHRcdDwvQm94PlxuXHRcdFx0XHRcdDxCb3ggd2lkdGg9XCI0MCVcIj5cblx0XHRcdFx0XHRcdDxUZXh0PntjYXBpdGFsfTwvVGV4dD5cblx0XHRcdFx0XHQ8L0JveD5cblx0XHRcdFx0XHQ8Qm94IHdpZHRoPVwiNDAlXCI+XG5cdFx0XHRcdFx0XHQ8VGV4dD57Y3VycmVuY3l9PC9UZXh0PlxuXHRcdFx0XHRcdDwvQm94PlxuXHRcdFx0XHQ8L0JveD5cblx0XHRcdDwvQm94PlxuXHRcdFx0O1xuXHRcdDwvQm94PlxuXHQpO1xufTtcblxubW9kdWxlLmV4cG9ydHMgPSBBcHA7XG4iXSwibWFwcGluZ3MiOiJBQUFBOztBQUNBLE1BQU1BLEtBQUssR0FBR0MsT0FBTyxDQUFDLE9BQUQsQ0FBckI7O0FBQ0EsTUFBTTtFQUFFQyxJQUFGO0VBQVFDO0FBQVIsSUFBZ0JGLE9BQU8sQ0FBQyxLQUFELENBQTdCOztBQUNBLE1BQU1HLFNBQVMsR0FBR0gsT0FBTyxDQUFDLGdCQUFELENBQVAsQ0FBMEJJLE9BQTVDOztBQUNBLE1BQU1DLEdBQUcsR0FBR0wsT0FBTyxDQUFDLDBCQUFELENBQW5COztBQUVBLE1BQU1NLEdBQUcsR0FBRyxNQUFNO0VBQ2pCLE1BQU0sQ0FBQ0MsT0FBRCxFQUFVQyxVQUFWLElBQXdCVCxLQUFLLENBQUNVLFFBQU4sQ0FBZSxFQUFmLENBQTlCO0VBQ0EsTUFBTSxDQUFDQyxPQUFELEVBQVVDLFVBQVYsSUFBd0JaLEtBQUssQ0FBQ1UsUUFBTixDQUFlLEVBQWYsQ0FBOUI7RUFDQSxNQUFNLENBQUNHLFFBQUQsRUFBV0MsV0FBWCxJQUEwQmQsS0FBSyxDQUFDVSxRQUFOLENBQWUsRUFBZixDQUFoQztFQUNBLE1BQU0sQ0FBQ0ssS0FBRCxFQUFRQyxRQUFSLElBQW9CaEIsS0FBSyxDQUFDVSxRQUFOLENBQWUsRUFBZixDQUExQjtFQUVBVixLQUFLLENBQUNpQixTQUFOLENBQWdCLE1BQU07SUFDckIsTUFBTUMsVUFBVSxHQUFHWixHQUFHLENBQUNhLHVCQUFKLENBQTRCWCxPQUE1QixDQUFuQjtJQUNBSSxVQUFVLENBQUNNLFVBQVUsQ0FBQyxDQUFELENBQVYsQ0FBY1AsT0FBZixDQUFWO0lBQ0FHLFdBQVcsQ0FBQ0ksVUFBVSxDQUFDLENBQUQsQ0FBVixDQUFjTCxRQUFmLENBQVg7SUFDQUcsUUFBUSxDQUFDRSxVQUFVLENBQUMsQ0FBRCxDQUFWLENBQWNFLFVBQWYsQ0FBUjtFQUNBLENBTEQ7RUFPQSxvQkFDQyxvQkFBQyxHQUFEO0lBQUssV0FBVyxFQUFDLE9BQWpCO0lBQXlCLFdBQVcsRUFBQztFQUFyQyxnQkFDQyxvQkFBQyxHQUFEO0lBQUssV0FBVyxFQUFDLE9BQWpCO0lBQXlCLFdBQVcsRUFBQztFQUFyQyxnQkFDQyxvQkFBQyxJQUFELGlDQURELENBREQsZUFLQyxvQkFBQyxTQUFEO0lBQ0MsV0FBVyxFQUFDLHFCQURiO0lBRUMsS0FBSyxFQUFFWixPQUZSO0lBR0MsUUFBUSxFQUFFQztFQUhYLEVBTEQsZUFVQyxvQkFBQyxHQUFEO0lBQUssYUFBYSxFQUFDLFFBQW5CO0lBQTRCLEtBQUssRUFBRSxFQUFuQztJQUF1QyxXQUFXLEVBQUM7RUFBbkQsZ0JBQ0Msb0JBQUMsR0FBRCxxQkFDQyxvQkFBQyxHQUFEO0lBQUssS0FBSyxFQUFDO0VBQVgsZ0JBQ0Msb0JBQUMsSUFBRCx1QkFERCxDQURELGVBSUMsb0JBQUMsR0FBRDtJQUFLLEtBQUssRUFBQztFQUFYLGdCQUNDLG9CQUFDLElBQUQsdUJBREQsQ0FKRCxlQU9DLG9CQUFDLEdBQUQ7SUFBSyxLQUFLLEVBQUM7RUFBWCxnQkFDQyxvQkFBQyxJQUFELG1CQURELENBUEQsQ0FERCxlQVlDLG9CQUFDLEdBQUQscUJBQ0Msb0JBQUMsR0FBRDtJQUFLLEtBQUssRUFBQztFQUFYLGdCQUNDLG9CQUFDLElBQUQsUUFBT00sS0FBUCxDQURELENBREQsZUFJQyxvQkFBQyxHQUFEO0lBQUssS0FBSyxFQUFDO0VBQVgsZ0JBQ0Msb0JBQUMsSUFBRCxRQUFPSixPQUFQLENBREQsQ0FKRCxlQU9DLG9CQUFDLEdBQUQ7SUFBSyxLQUFLLEVBQUM7RUFBWCxnQkFDQyxvQkFBQyxJQUFELFFBQU9FLFFBQVAsQ0FERCxDQVBELENBWkQsQ0FWRCxNQUREO0FBc0NBLENBbkREOztBQXFEQVEsTUFBTSxDQUFDQyxPQUFQLEdBQWlCZixHQUFqQiJ9