"use strict";

const React = require("react");

const {
  Text,
  Box,
  Transform,
  Newline
} = require("ink");

const {
  useState,
  useEffect
} = require("react");

const TextInput = require("ink-text-input").default;

const Ascii = require("ink-ascii").default;

const Gradient = require("ink-gradient");

const BigText = require("ink-big-text");

const QuickSearchInput = require("ink-quicksearch-input");

const App = () => {
  const [result, setResult] = useState("");
  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Box, {
    flexDirection: "column"
  }, /*#__PURE__*/React.createElement(Box, {
    justifyContent: "center"
  }, /*#__PURE__*/React.createElement(Gradient, {
    name: "instagram"
  }, /*#__PURE__*/React.createElement(BigText, {
    text: "Anubis"
  }))), /*#__PURE__*/React.createElement(Box, null, /*#__PURE__*/React.createElement(Text, null, /*#__PURE__*/React.createElement(Text, null, "What do you want ?"), /*#__PURE__*/React.createElement(Newline, null), /*#__PURE__*/React.createElement(Text, null, "You wanted to ", result)), /*#__PURE__*/React.createElement(QuickSearchInput, {
    items: [{
      value: 1,
      label: "a"
    }, {
      value: 2,
      label: "b"
    }],
    onSelect: item => setResult(item.label)
  }))));
};

module.exports = App;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJSZWFjdCIsInJlcXVpcmUiLCJUZXh0IiwiQm94IiwiVHJhbnNmb3JtIiwiTmV3bGluZSIsInVzZVN0YXRlIiwidXNlRWZmZWN0IiwiVGV4dElucHV0IiwiZGVmYXVsdCIsIkFzY2lpIiwiR3JhZGllbnQiLCJCaWdUZXh0IiwiUXVpY2tTZWFyY2hJbnB1dCIsIkFwcCIsInJlc3VsdCIsInNldFJlc3VsdCIsInZhbHVlIiwibGFiZWwiLCJpdGVtIiwibW9kdWxlIiwiZXhwb3J0cyJdLCJzb3VyY2VzIjpbInVpLmpzIl0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuY29uc3QgUmVhY3QgPSByZXF1aXJlKFwicmVhY3RcIik7XG5jb25zdCB7IFRleHQsIEJveCwgVHJhbnNmb3JtLCBOZXdsaW5lIH0gPSByZXF1aXJlKFwiaW5rXCIpO1xuY29uc3QgeyB1c2VTdGF0ZSwgdXNlRWZmZWN0IH0gPSByZXF1aXJlKFwicmVhY3RcIik7XG5jb25zdCBUZXh0SW5wdXQgPSByZXF1aXJlKFwiaW5rLXRleHQtaW5wdXRcIikuZGVmYXVsdDtcbmNvbnN0IEFzY2lpID0gcmVxdWlyZShcImluay1hc2NpaVwiKS5kZWZhdWx0O1xuY29uc3QgR3JhZGllbnQgPSByZXF1aXJlKFwiaW5rLWdyYWRpZW50XCIpO1xuY29uc3QgQmlnVGV4dCA9IHJlcXVpcmUoXCJpbmstYmlnLXRleHRcIik7XG5jb25zdCBRdWlja1NlYXJjaElucHV0ID0gcmVxdWlyZShcImluay1xdWlja3NlYXJjaC1pbnB1dFwiKTtcblxuY29uc3QgQXBwID0gKCkgPT4ge1xuXHRjb25zdCBbcmVzdWx0LCBzZXRSZXN1bHRdID0gdXNlU3RhdGUoXCJcIik7XG5cdHJldHVybiAoXG5cdFx0PD5cblx0XHRcdDxCb3ggZmxleERpcmVjdGlvbj1cImNvbHVtblwiPlxuXHRcdFx0XHQ8Qm94IGp1c3RpZnlDb250ZW50PVwiY2VudGVyXCI+XG5cdFx0XHRcdFx0PEdyYWRpZW50IG5hbWU9XCJpbnN0YWdyYW1cIj5cblx0XHRcdFx0XHRcdDxCaWdUZXh0IHRleHQ9XCJBbnViaXNcIiAvPlxuXHRcdFx0XHRcdDwvR3JhZGllbnQ+XG5cdFx0XHRcdDwvQm94PlxuXHRcdFx0XHQ8Qm94PlxuXHRcdFx0XHRcdDxUZXh0PlxuXHRcdFx0XHRcdFx0PFRleHQ+V2hhdCBkbyB5b3Ugd2FudCA/PC9UZXh0PlxuXHRcdFx0XHRcdFx0PE5ld2xpbmUgLz5cblx0XHRcdFx0XHRcdDxUZXh0PllvdSB3YW50ZWQgdG8ge3Jlc3VsdH08L1RleHQ+XG5cdFx0XHRcdFx0PC9UZXh0PlxuXHRcdFx0XHRcdDxRdWlja1NlYXJjaElucHV0XG5cdFx0XHRcdFx0XHRpdGVtcz17W1xuXHRcdFx0XHRcdFx0XHR7IHZhbHVlOiAxLCBsYWJlbDogXCJhXCIgfSxcblx0XHRcdFx0XHRcdFx0eyB2YWx1ZTogMiwgbGFiZWw6IFwiYlwiIH0sXG5cdFx0XHRcdFx0XHRdfVxuXHRcdFx0XHRcdFx0b25TZWxlY3Q9eyhpdGVtKSA9PiBzZXRSZXN1bHQoaXRlbS5sYWJlbCl9XG5cdFx0XHRcdFx0Lz5cblx0XHRcdFx0PC9Cb3g+XG5cdFx0XHQ8L0JveD5cblx0XHQ8Lz5cblx0KTtcbn07XG5cbm1vZHVsZS5leHBvcnRzID0gQXBwO1xuIl0sIm1hcHBpbmdzIjoiQUFBQTs7QUFDQSxNQUFNQSxLQUFLLEdBQUdDLE9BQU8sQ0FBQyxPQUFELENBQXJCOztBQUNBLE1BQU07RUFBRUMsSUFBRjtFQUFRQyxHQUFSO0VBQWFDLFNBQWI7RUFBd0JDO0FBQXhCLElBQW9DSixPQUFPLENBQUMsS0FBRCxDQUFqRDs7QUFDQSxNQUFNO0VBQUVLLFFBQUY7RUFBWUM7QUFBWixJQUEwQk4sT0FBTyxDQUFDLE9BQUQsQ0FBdkM7O0FBQ0EsTUFBTU8sU0FBUyxHQUFHUCxPQUFPLENBQUMsZ0JBQUQsQ0FBUCxDQUEwQlEsT0FBNUM7O0FBQ0EsTUFBTUMsS0FBSyxHQUFHVCxPQUFPLENBQUMsV0FBRCxDQUFQLENBQXFCUSxPQUFuQzs7QUFDQSxNQUFNRSxRQUFRLEdBQUdWLE9BQU8sQ0FBQyxjQUFELENBQXhCOztBQUNBLE1BQU1XLE9BQU8sR0FBR1gsT0FBTyxDQUFDLGNBQUQsQ0FBdkI7O0FBQ0EsTUFBTVksZ0JBQWdCLEdBQUdaLE9BQU8sQ0FBQyx1QkFBRCxDQUFoQzs7QUFFQSxNQUFNYSxHQUFHLEdBQUcsTUFBTTtFQUNqQixNQUFNLENBQUNDLE1BQUQsRUFBU0MsU0FBVCxJQUFzQlYsUUFBUSxDQUFDLEVBQUQsQ0FBcEM7RUFDQSxvQkFDQyx1REFDQyxvQkFBQyxHQUFEO0lBQUssYUFBYSxFQUFDO0VBQW5CLGdCQUNDLG9CQUFDLEdBQUQ7SUFBSyxjQUFjLEVBQUM7RUFBcEIsZ0JBQ0Msb0JBQUMsUUFBRDtJQUFVLElBQUksRUFBQztFQUFmLGdCQUNDLG9CQUFDLE9BQUQ7SUFBUyxJQUFJLEVBQUM7RUFBZCxFQURELENBREQsQ0FERCxlQU1DLG9CQUFDLEdBQUQscUJBQ0Msb0JBQUMsSUFBRCxxQkFDQyxvQkFBQyxJQUFELDZCQURELGVBRUMsb0JBQUMsT0FBRCxPQUZELGVBR0Msb0JBQUMsSUFBRCwwQkFBcUJTLE1BQXJCLENBSEQsQ0FERCxlQU1DLG9CQUFDLGdCQUFEO0lBQ0MsS0FBSyxFQUFFLENBQ047TUFBRUUsS0FBSyxFQUFFLENBQVQ7TUFBWUMsS0FBSyxFQUFFO0lBQW5CLENBRE0sRUFFTjtNQUFFRCxLQUFLLEVBQUUsQ0FBVDtNQUFZQyxLQUFLLEVBQUU7SUFBbkIsQ0FGTSxDQURSO0lBS0MsUUFBUSxFQUFHQyxJQUFELElBQVVILFNBQVMsQ0FBQ0csSUFBSSxDQUFDRCxLQUFOO0VBTDlCLEVBTkQsQ0FORCxDQURELENBREQ7QUF5QkEsQ0EzQkQ7O0FBNkJBRSxNQUFNLENBQUNDLE9BQVAsR0FBaUJQLEdBQWpCIn0=