"use strict";

const React = require("react");

const {
  Text,
  Box,
  Transform,
  Newline
} = require("ink");

const {
  useState,
  useEffect
} = require("react");

const TextInput = require("ink-text-input").default;

const Ascii = require("ink-ascii").default;

const Gradient = require("ink-gradient");

const BigText = require("ink-big-text");

const QuickSearchInput = require("ink-quicksearch-input");

const App = () => {
  const [result, setResult] = useState("");
  return /*#__PURE__*/React.createElement(Box, {
    flexDirection: "column"
  }, /*#__PURE__*/React.createElement(Box, {
    justifyContent: "center"
  }, /*#__PURE__*/React.createElement(Gradient, {
    name: "instagram"
  }, /*#__PURE__*/React.createElement(BigText, {
    text: "Anubis"
  }))), /*#__PURE__*/React.createElement(Box, null, /*#__PURE__*/React.createElement(Text, null, /*#__PURE__*/React.createElement(Text, null, "What do you want ?"), /*#__PURE__*/React.createElement(Newline, null), /*#__PURE__*/React.createElement(Text, null, "You wanted to ", result)), /*#__PURE__*/React.createElement(QuickSearchInput, {
    items: [{
      value: 1,
      label: "a"
    }, {
      value: 2,
      label: "b"
    }],
    onSelect: item => setResult(item.label)
  })));
};

module.exports = App;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJSZWFjdCIsInJlcXVpcmUiLCJUZXh0IiwiQm94IiwiVHJhbnNmb3JtIiwiTmV3bGluZSIsInVzZVN0YXRlIiwidXNlRWZmZWN0IiwiVGV4dElucHV0IiwiZGVmYXVsdCIsIkFzY2lpIiwiR3JhZGllbnQiLCJCaWdUZXh0IiwiUXVpY2tTZWFyY2hJbnB1dCIsIkFwcCIsInJlc3VsdCIsInNldFJlc3VsdCIsInZhbHVlIiwibGFiZWwiLCJpdGVtIiwibW9kdWxlIiwiZXhwb3J0cyJdLCJzb3VyY2VzIjpbInVpLmpzIl0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuY29uc3QgUmVhY3QgPSByZXF1aXJlKFwicmVhY3RcIik7XG5jb25zdCB7IFRleHQsIEJveCwgVHJhbnNmb3JtLCBOZXdsaW5lIH0gPSByZXF1aXJlKFwiaW5rXCIpO1xuY29uc3QgeyB1c2VTdGF0ZSwgdXNlRWZmZWN0IH0gPSByZXF1aXJlKFwicmVhY3RcIik7XG5jb25zdCBUZXh0SW5wdXQgPSByZXF1aXJlKFwiaW5rLXRleHQtaW5wdXRcIikuZGVmYXVsdDtcbmNvbnN0IEFzY2lpID0gcmVxdWlyZShcImluay1hc2NpaVwiKS5kZWZhdWx0O1xuY29uc3QgR3JhZGllbnQgPSByZXF1aXJlKFwiaW5rLWdyYWRpZW50XCIpO1xuY29uc3QgQmlnVGV4dCA9IHJlcXVpcmUoXCJpbmstYmlnLXRleHRcIik7XG5jb25zdCBRdWlja1NlYXJjaElucHV0ID0gcmVxdWlyZShcImluay1xdWlja3NlYXJjaC1pbnB1dFwiKTtcblxuY29uc3QgQXBwID0gKCkgPT4ge1xuXHRjb25zdCBbcmVzdWx0LCBzZXRSZXN1bHRdID0gdXNlU3RhdGUoXCJcIik7XG5cdHJldHVybiAoXG5cdFx0PEJveCBmbGV4RGlyZWN0aW9uPVwiY29sdW1uXCI+XG5cdFx0XHQ8Qm94IGp1c3RpZnlDb250ZW50PVwiY2VudGVyXCI+XG5cdFx0XHRcdDxHcmFkaWVudCBuYW1lPVwiaW5zdGFncmFtXCI+XG5cdFx0XHRcdFx0PEJpZ1RleHQgdGV4dD1cIkFudWJpc1wiIC8+XG5cdFx0XHRcdDwvR3JhZGllbnQ+XG5cdFx0XHQ8L0JveD5cblx0XHRcdDxCb3g+XG5cdFx0XHRcdDxUZXh0PlxuXHRcdFx0XHRcdDxUZXh0PldoYXQgZG8geW91IHdhbnQgPzwvVGV4dD5cblx0XHRcdFx0XHQ8TmV3bGluZSAvPlxuXHRcdFx0XHRcdDxUZXh0PllvdSB3YW50ZWQgdG8ge3Jlc3VsdH08L1RleHQ+XG5cdFx0XHRcdDwvVGV4dD5cblx0XHRcdFx0PFF1aWNrU2VhcmNoSW5wdXRcblx0XHRcdFx0XHRpdGVtcz17W1xuXHRcdFx0XHRcdFx0eyB2YWx1ZTogMSwgbGFiZWw6IFwiYVwiIH0sXG5cdFx0XHRcdFx0XHR7IHZhbHVlOiAyLCBsYWJlbDogXCJiXCIgfSxcblx0XHRcdFx0XHRdfVxuXHRcdFx0XHRcdG9uU2VsZWN0PXsoaXRlbSkgPT4gc2V0UmVzdWx0KGl0ZW0ubGFiZWwpfVxuXHRcdFx0XHQvPlxuXHRcdFx0PC9Cb3g+XG5cdFx0PC9Cb3g+XG5cdCk7XG59O1xuXG5tb2R1bGUuZXhwb3J0cyA9IEFwcDtcbiJdLCJtYXBwaW5ncyI6IkFBQUE7O0FBQ0EsTUFBTUEsS0FBSyxHQUFHQyxPQUFPLENBQUMsT0FBRCxDQUFyQjs7QUFDQSxNQUFNO0VBQUVDLElBQUY7RUFBUUMsR0FBUjtFQUFhQyxTQUFiO0VBQXdCQztBQUF4QixJQUFvQ0osT0FBTyxDQUFDLEtBQUQsQ0FBakQ7O0FBQ0EsTUFBTTtFQUFFSyxRQUFGO0VBQVlDO0FBQVosSUFBMEJOLE9BQU8sQ0FBQyxPQUFELENBQXZDOztBQUNBLE1BQU1PLFNBQVMsR0FBR1AsT0FBTyxDQUFDLGdCQUFELENBQVAsQ0FBMEJRLE9BQTVDOztBQUNBLE1BQU1DLEtBQUssR0FBR1QsT0FBTyxDQUFDLFdBQUQsQ0FBUCxDQUFxQlEsT0FBbkM7O0FBQ0EsTUFBTUUsUUFBUSxHQUFHVixPQUFPLENBQUMsY0FBRCxDQUF4Qjs7QUFDQSxNQUFNVyxPQUFPLEdBQUdYLE9BQU8sQ0FBQyxjQUFELENBQXZCOztBQUNBLE1BQU1ZLGdCQUFnQixHQUFHWixPQUFPLENBQUMsdUJBQUQsQ0FBaEM7O0FBRUEsTUFBTWEsR0FBRyxHQUFHLE1BQU07RUFDakIsTUFBTSxDQUFDQyxNQUFELEVBQVNDLFNBQVQsSUFBc0JWLFFBQVEsQ0FBQyxFQUFELENBQXBDO0VBQ0Esb0JBQ0Msb0JBQUMsR0FBRDtJQUFLLGFBQWEsRUFBQztFQUFuQixnQkFDQyxvQkFBQyxHQUFEO0lBQUssY0FBYyxFQUFDO0VBQXBCLGdCQUNDLG9CQUFDLFFBQUQ7SUFBVSxJQUFJLEVBQUM7RUFBZixnQkFDQyxvQkFBQyxPQUFEO0lBQVMsSUFBSSxFQUFDO0VBQWQsRUFERCxDQURELENBREQsZUFNQyxvQkFBQyxHQUFELHFCQUNDLG9CQUFDLElBQUQscUJBQ0Msb0JBQUMsSUFBRCw2QkFERCxlQUVDLG9CQUFDLE9BQUQsT0FGRCxlQUdDLG9CQUFDLElBQUQsMEJBQXFCUyxNQUFyQixDQUhELENBREQsZUFNQyxvQkFBQyxnQkFBRDtJQUNDLEtBQUssRUFBRSxDQUNOO01BQUVFLEtBQUssRUFBRSxDQUFUO01BQVlDLEtBQUssRUFBRTtJQUFuQixDQURNLEVBRU47TUFBRUQsS0FBSyxFQUFFLENBQVQ7TUFBWUMsS0FBSyxFQUFFO0lBQW5CLENBRk0sQ0FEUjtJQUtDLFFBQVEsRUFBR0MsSUFBRCxJQUFVSCxTQUFTLENBQUNHLElBQUksQ0FBQ0QsS0FBTjtFQUw5QixFQU5ELENBTkQsQ0FERDtBQXVCQSxDQXpCRDs7QUEyQkFFLE1BQU0sQ0FBQ0MsT0FBUCxHQUFpQlAsR0FBakIifQ==